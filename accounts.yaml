swagger: '2.0'
info:
  description: Accounts service for eDropin
  version: 1.0.0
  title: eDropin Accounts
  license:
    name: UNLICENSED
  contact:
    name: Saj Arora
    email: dev@edropin.com
host: 'accounts-dot-edropin-playground.appspot.com'
basePath: /
tags:
  - name: eaAccounts
    description: User accounts on eDropin
  - name: eaProfiles
    description: Profiles such as course providers and businesses
  - name: eaUtilities
    description: eDropin Utilities
schemes:
  - https
produces:
  - application/json
securityDefinitions:
  Authorization:
    type: apiKey
    in: header
    name: Authorization
  ClientKey:
    type: apiKey
    in: header
    name: X-Client-Key
  AdminKey:
    type: apiKey
    in: header
    name: X-Admin-Key
security:
  - ClientKey: []
    Authorization: []
paths:
  '/accounts/authenticate/password':
    post:
      tags:
        - eaAccounts
      security:
        - ClientKey: []
      summary: Authenticate using email/password
      operationId: authenticatePassword
      parameters:
        - in: body
          name: authProps
          description: Authentication values
          required: true
          schema:
            $ref: '#/definitions/EaPasswordAuthentication'
      responses:
        '200':
          description: Authentication
          schema:
            $ref: '#/definitions/EaAuthentication'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  ### Accounts
  /accounts:
    get:
      tags:
        - eaAccounts
      summary: Get Account
      operationId: getAccount
      responses:
        '200':
          description: Account
          schema:
            $ref: '#/definitions/EaAccount'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eaAccounts
      summary: Create/update existing account
      operationId: updateAccount
      parameters:
        - in: body
          name: accountProps
          description: Account object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/EaAccountUpdate'
      responses:
        '200':
          description: Account updated
          schema:
            $ref: '#/definitions/EaAccount'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  ### End of Accounts
  '/accounts/{accountId}/claims':
    put:
      tags:
        - eaAccounts
      security:
        - AdminKey: []
          ClientKey: []
      summary: Update account claims
      operationId: updateAccountClaims
      parameters:
        - $ref: '#/parameters/accountId'
        - in: body
          name: claimProps
          description: Claims that need to be updated
          required: true
          schema:
            $ref: '#/definitions/EaClaims'
      responses:
        '200':
          description: Account updated
          schema:
            $ref: '#/definitions/EaAccount'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '404':
          description: Account not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  ### End of Accounts
  
  ### Profiles
  '/profiles':
    get:
      tags:
        - eaProfiles
      summary: Get Profiles
      operationId: getAllProfiles
      parameters:
        - in: query
          name: q
          type: string
        - in: query
          name: profileType
          type: string
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Profile
          schema:
            $ref: '#/definitions/EaPagedProfile'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eaProfiles
      summary: Create profile
      operationId: createProfile
      parameters:
        - in: body
          name: profileProps
          description: Profile object that needs to be created
          required: true
          schema:
            $ref: '#/definitions/EaProfileUpdate'
      responses:
        '200':
          description: Profile created
          schema:
            $ref: '#/definitions/EaProfile'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/profiles/get-multi':
    get:
      tags:
        - eaProfiles
      summary: Get Multiple Profiles
      operationId: getMultipleProfiles
      parameters:
        - in: query
          name: profileIds
          type: array
          items:
            type: string
      responses:
        '200':
          description: List of Profiles
          schema:
            $ref: '#/definitions/EaPagedProfile'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/profiles/{profileId}':
    parameters:
      - $ref: '#/parameters/profileId'
    get:
      tags:
        - eaProfiles
      summary: Get a profile from the directory
      operationId: getProfile
      responses:
        '200':
          description: Profile
          schema:
            $ref: '#/definitions/EaProfile'
        '404':
          description: Profile not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eaProfiles
      summary: Update an existing profile
      operationId: updateProfile
      parameters:
        - in: body
          name: profileProps
          description: Profile object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/EaProfileUpdate'
      responses:
        '200':
          description: Profile updated
          schema:
            $ref: '#/definitions/EaProfile'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Profile not found
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eaProfiles
      summary: Delete an existing profile
      operationId: deleteProfile
      responses:
        '200':
          description: Profile deleted
          schema:
            $ref: '#/definitions/EaSuccess'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Profile not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/profiles/invite':
    put:
      tags:
        - eaProfiles
      summary: Invite for profile creation
      operationId: profileInvite
      parameters:
        - in: body
          name: profileProps
          description: Profile object for invite
          required: true
          schema:
            $ref: '#/definitions/EaProfileInvite'
      responses:
        '200':
          description: Profile invite sent
          schema:
            $ref: '#/definitions/EaProfile'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/profiles/usernamecheck':
    get:
      tags:
        - eaProfiles
      summary: Check username availability
      operationId: checkUsernameAvailability
      parameters:
        - in: query
          name: username
          description: Username to check for availability
          required: true
          type: string
      responses:
        '200':
          description: Username is available
          schema:
            $ref: '#/definitions/EaSuccess'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/profiles/{profileId}/permissions/{accountId}':
    parameters:
      - $ref: '#/parameters/profileId'
      - $ref: '#/parameters/accountId'
    get:
      tags:
        - eaProfiles
      summary: Get permission for account
      operationId: getAccountPermissionForProfile
      responses:
        '200':
          description: Permissions for account
          schema:
            $ref: "#/definitions/EaPermission"
        '401':
          $ref: '#/responses/UnauthorizedError'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eaProfiles
      summary: Set permission for profile
      operationId: setProfilePermission
      parameters:
        - in: body
          name: permissionProps
          description: Permissions
          required: true
          schema:
            $ref: '#/definitions/EaPermissionInput'
      responses:
        '200':
          description: Permission set
          schema:
            $ref: '#/definitions/EaPermission'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/profiles/{profileId}/permissions/{accountId}/check':
    parameters:
      - $ref: '#/parameters/profileId'
      - $ref: '#/parameters/accountId'
    get:
      tags:
        - eaProfiles
      summary: Check account has permission
      operationId: checkAccountHasPermission
      parameters:
        - in: query
          type: string
          required: true
          name: permission
      responses:
        '200':
          description: Account has Permission
          schema:
            $ref: '#/definitions/EaPermissionCheck'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/profiles/{profileId}/all-permissions':
    parameters:
      - $ref: '#/parameters/profileId'
    get:
      tags:
        - eaProfiles
      summary: List all profile permissions
      operationId: getProfilePermission
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: List of Users with permissions linked to this profile
          schema:
            $ref: '#/definitions/EaPagedPermission'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/profiles/search':
    get:
      tags:
        - eaProfiles
      summary: Search Profiles
      operationId: searchProfile
      parameters:
        - in: query
          name: q
          type: string
        - in: query
          name: profileType
          type: string
      responses:
        '200':
          description: Profiles
          schema:
            $ref: '#/definitions/EaPagedProfile'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/profiles/search/category':
    get:
      tags:
        - eaProfiles
      summary: Get category facets
      operationId: getProfileCategories
      parameters:
        - in: query
          name: q
          type: string
        - in: query
          name: profileType
          type: string
      responses:
        '200':
          description: Categories
          schema:
            type: array
            items:
              type: string
        '401':
          $ref: '#/responses/UnauthorizedError'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  ### End of profiles
  
  '/utility/phoneverification/start':
    post:
      tags:
        - eaUtilities
      summary: Verify a phone number
      operationId: startPhoneVerification
      parameters:
        - in: body
          name: phoneProps
          description: Phone number for verification
          required: true
          schema:
            $ref: '#/definitions/EaPhoneVerificationInput'
      responses:
        '200':
          description: Phone verification code sent
          schema:
            $ref: '#/definitions/EaSuccess'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/utility/phoneverification/check':
    post:
      tags:
        - eaUtilities
      summary: Check phone verification
      operationId: checkPhoneVerification
      parameters:
        - in: body
          name: phoneProps
          description: Phone code to complete verification
          required: true
          schema:
            $ref: '#/definitions/EaPhoneVerificationCheck'
      responses:
        '200':
          description: Phone verified
          schema:
            $ref: '#/definitions/EaPhoneVerification'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'

parameters:
  limit:
    name: limit
    in: query
    description: Number of items returned
    type: integer
    format: int32
    minimum: 0
    exclusiveMinimum: true
    maximum: 50
    exclusiveMaximum: false
    multipleOf: 10
    default: 20
  cursor:
    name: cursor
    in: query
    description: Start Cursor for query
    type: string
  accountId:
    name: accountId
    in: path
    description: Account Id
    type: string
    required: true
  profileId:
    name: profileId
    in: path
    description: Profile Id
    type: string
    required: true
responses:
  Default500ErrorResponse:
    description: An unexpected error occured.
    schema:
      $ref: '#/definitions/DefaultError'
  InvalidInputResponse:
    description: Validation exception
  UnauthorizedError:
    description: API key is missing or invalid
    headers:
      WWW_Authenticate:
        type: string
definitions:
  # Extendable Models
  EaBaseId:
    type: object
    properties:
      id:
        type: string
      created:
        type: integer
        format: int32
        readOnly: true
      modified:
        type: integer
        format: int32
        readOnly: true
      version:
        type: string
        readOnly: true
            
  EaPagination:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
      nextCursor:
        type: string
      total:
        type: integer
        format: int32
  ### End Extendable Models
  
  ### Components
  EaAddress:
    type: object
    properties:
      summary:
        type: string
      streetNumberOrBuilding:
        type: string
      street:
        type: string
      city:
        type: string
      state:
        type: string
      country:
        type: string
      zip:
        type: string
        
  EaGeoloc:
    type: object
    properties:
      lat:
        type: number
        format: float
      lng:
        type: number
        format: float
  
  DefaultError:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  
  ### Permissions
  EaPermission:
    type: object
    properties:
      id:
        type: string
      creatorId:
        type: string
      entityKind:
        type: string
      entityId:
        type: string
      permissions:
        type: object
  EaPermissionInput:
    type: object
    properties:
      permissions:
        type: object
  EaPagedPermission:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EaPagination'
      allPermission:
        type: array
        items:
          type: string
      items:
        type: array
        items:
          $ref: '#/definitions/EaPermission'
  EaPermissionCheck:
    type: object
    properties:
      hasPermission:
        type: boolean
  ### End Permissions
  
  EaSuccess:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: object
  
  ### Account
  EaPasswordAuthentication:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
        
  EaAuthentication:
    type: object
    properties:
      idToken:
        type: string
      isAnonymous:
        type: string
      id:
        type: string
  
  EaAccountUpdate:
    type: object
    properties:
      name:
        type: string
      picture:
        type: string
      website:
        type: string
      bio:
        type: string
        maxLength: 200
      
  EaAccount:
    type: object
    allOf:
      - $ref: '#/definitions/EaBaseId'
      - $ref: '#/definitions/EaAccountUpdate'
      - properties:
          claims:
            type: object
            readOnly: true
  
  EaClaims:
    type: object
    properties:
      claims:
        type: object
  ### End Account
  
  ### Profile
  EaProfileBase:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      phone:
        type: string
      profileType:
        type: string
      picture:
        type: string
      videoLink:
        type: string
      pictures:
        type: string
      bio:
        type: string
      category:
        type: string
      location:
        type: string
      address:
        $ref: '#/definitions/EaAddress'
      website:
        type: string
      facebook:
        type: string
      linkedIn: 
        type: string
      instagram:
        type: string
      _geoloc:
        $ref: '#/definitions/EaGeoloc'

      
  EaProfileUpdate:
    type: object
    allOf:
      - $ref: '#/definitions/EaProfileBase'
      - properties:
          username:
            type: string
  
  EaProfileInvite:
    type: object
    allOf:
      - $ref: '#/definitions/EaProfileBase'
        
  EaProfile:
    type: object
    allOf:
      - $ref: '#/definitions/EaBaseId'
      - $ref: '#/definitions/EaProfileBase'
      - properties:
          phoneVerifiedFlag:
            type: boolean
          emailVerifiedFlag:
            type: boolean
          verfiedFlag:
            type: boolean
          merchantFlag:
            type: boolean
          trustStatus:
            type: string
            
  EaProfileSummary:
    type: object
    properties:
      id:
        type: string
      name: 
        type: string
      picture:
        type: string
      category:
        type: string
      location:
        type: string
      inviteFlag:
        type: boolean
      
  EaPagedProfile:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EaPagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EaProfileSummary'
  
  EaPhoneVerificationInput:
    type: object
    properties:
      phone:
        type: string
      countryCode:
        type: string
      method:
        type: string
        enum: [sms, call]
        default: sms
          
  EaPhoneVerification:
    type: object
    properties:
      verificationToken:
        type: string
        
  EaPhoneVerificationCheck:
    type: object
    properties:
      phone:
        type: string
      countryCode:
        type: string
      code:
        type: string
