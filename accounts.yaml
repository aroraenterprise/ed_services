swagger: '2.0'
info:
  description: Accounts service for eDropin
  version: 1.1.0
  title: eDropin Accounts
  license:
    name: UNLICENSED
  contact:
    name: Saj Arora
    email: dev@edropin.com
host: edropin-test.appspot.com
basePath: /
tags:
  - name: eaPermissions
    description: Permissions
  - name: eaAccounts
    description: User accounts on eDropin
  - name: eaProfiles
    description: Profiles such as course providers and businesses
  - name: eaFiles
    description: Manage user files
  - name: eaUnsplash
    description: Unsplash image search
  - name: eaProfileInvites
    description: Profile invitations
  - name: eaProfileTags
    description: Tag requests, accept and decline
schemes:
  - https
produces:
  - application/json
securityDefinitions:
  Authorization:
    type: apiKey
    in: header
    name: Authorization
  AuthorizationOptional:
    type: apiKey
    in: header
    name: Authorization
  ClientKey:
    type: apiKey
    in: header
    name: X-Client-Key
  AdminKey:
    type: apiKey
    in: header
    name: X-Admin-Key
  ServiceKey:
    type: apiKey
    in: header
    name: X-Service-Key
security:
  - ClientKey: []
    Authorization: []
paths:
  '/permissions/accept-invite/{inviteToken}':
    parameters:
      - in: path
        name: inviteToken
        description: Invite Token
        required: true
        type: string
    post:
      tags:
        - eaPermissions
      summary: 'Accept a permission invite'
      operationId: acceptPermissionInvite
      parameters:
        - in: query
          name: v
          description: Accept or decline an invite
          type: string
          enum:
            - accept
            - decline
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EaPermissionAccept'
        '404':
          description: Permission invite not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
          
  '/permissions/{entityType}/{entityId}/send-invite':
    parameters:
      - $ref: '#/parameters/entityType'
      - $ref: '#/parameters/entityId'
    post:
      tags:
        - eaPermissions
      summary: 'Send a permission invite'
      operationId: sendPermissionInvite
      parameters:
        - in: body
          name: permissionInvite
          description: Object for permission invite
          required: true
          schema:
            $ref: '#/definitions/EaPermissionInviteCreate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EaPagedPermissionInvite'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/permissions/{entityType}/{entityId}/accounts':
    parameters:
      - $ref: '#/parameters/entityType'
      - $ref: '#/parameters/entityId'
    get:
      tags:
        - eaPermissions
      summary: Get permissions for entity
      operationId: paginatePermissions
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Permissions for account
          schema:
            $ref: '#/definitions/EaPagedPermission'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/permissions/{entityType}/{entityId}/accounts/{accountId}':
    parameters:
      - $ref: '#/parameters/entityType'
      - $ref: '#/parameters/entityId'
      - $ref: '#/parameters/accountId'
    get:
      tags:
        - eaPermissions
      summary: Check account has permission
      operationId: hasPermission
      parameters:
        - in: query
          type: string
          required: false
          name: permission
      responses:
        '200':
          description: Account has Permission
          schema:
            $ref: '#/definitions/EaPermissionCheck'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eaPermissions
      summary: Set account permission
      operationId: setPermission
      parameters:
        - in: body
          required: true
          name: permissionProps
          schema:
            $ref: '#/definitions/EaPermissionInput'
      responses:
        '200':
          description: Set Account Permission
          schema:
            $ref: '#/definitions/EaPermission'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eaPermissions
      summary: Remove all permissions for account
      operationId: removePermissionsForAccount
      responses:
        '200':
          description: Permissions for account
          schema:
            $ref: '#/definitions/EaSuccess'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
          
  /accounts/authenticate/password:
    post:
      tags:
        - eaAccounts
      security:
        - ClientKey: []
      summary: Authenticate using email/password
      operationId: authenticatePassword
      parameters:
        - in: body
          name: authProps
          description: Authentication values
          required: true
          schema:
            $ref: '#/definitions/EaPasswordAuthentication'
      responses:
        '200':
          description: Authentication
          schema:
            $ref: '#/definitions/EaAuthentication'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  /accounts:
    get:
      tags:
        - eaAccounts
      summary: Get Account
      operationId: getAccount
      responses:
        '200':
          description: Account
          schema:
            $ref: '#/definitions/EaAccount'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eaAccounts
      summary: Create/update existing account
      operationId: updateAccount
      parameters:
        - in: body
          name: accountProps
          description: Account object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/EaAccountUpdate'
      responses:
        '200':
          description: Account updated
          schema:
            $ref: '#/definitions/EaAccount'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/accounts/{accountId}/claims':
    put:
      tags:
        - eaAccounts
      security:
        - AdminKey: []
          ClientKey: []
      summary: Update account claims
      operationId: updateAccountClaims
      parameters:
        - $ref: '#/parameters/accountId'
        - in: body
          name: claimProps
          description: Claims that need to be updated
          required: true
          schema:
            $ref: '#/definitions/EaClaims'
      responses:
        '200':
          description: Account updated
          schema:
            $ref: '#/definitions/EaAccount'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Account not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/accounts/get-multi':
    get:
      tags:
        - eaAccounts
      summary: Get multiple accounts [service only]
      security:
        - ClientKey: []
          ServiceKey: []
      parameters:
      - in: query
        name: accountIds
        type: array
        items:
          type: string
      operationId: getMultipleAccounts
      responses:
        '200':
          description: List of all accounts
          schema:
            $ref: '#/definitions/EaPagedAccount'
        '500':
          $ref: '#/responses/Default500ErrorResponse'

  /profiles:
    get:
      tags:
        - eaProfiles
      summary: List all profiles
      operationId: getAllProfiles
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/enhanced'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Profile
          schema:
            $ref: '#/definitions/EaPagedProfile'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eaProfiles
      summary: Create profile
      operationId: createProfile
      parameters:
        - in: body
          name: profileProps
          description: Profile object that needs to be created
          required: true
          schema:
            $ref: '#/definitions/EaProfileCreate'
      responses:
        '200':
          description: Profile created
          schema:
            $ref: '#/definitions/EaProfile'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  /profiles/get-multi:
    get:
      tags:
        - eaProfiles
      summary: Get Multiple Profiles
      operationId: getMultipleProfiles
      parameters:
        - in: query
          name: profileIds
          type: array
          items:
            type: string
      responses:
        '200':
          description: List of Profiles
          schema:
            $ref: '#/definitions/EaPagedProfile'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
          
  '/profiles/{profileId}':
    parameters:
      - $ref: '#/parameters/profileId'
    get:
      tags:
        - eaProfiles
      summary: Get a profile from the directory
      operationId: getProfile
      parameters:
        - $ref: '#/parameters/enhanced'
      responses:
        '200':
          description: Profile
          schema:
            $ref: '#/definitions/EaProfile'
        '404':
          description: Profile not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eaProfiles
      summary: Update an existing profile
      operationId: updateProfile
      parameters:
        - in: body
          name: profileProps
          description: Profile object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/EaProfileUpdate'
      responses:
        '200':
          description: Profile updated
          schema:
            $ref: '#/definitions/EaProfile'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Profile not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eaProfiles
      summary: Delete an existing profile
      operationId: deleteProfile
      responses:
        '200':
          description: Profile deleted
          schema:
            $ref: '#/definitions/EaSuccess'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Profile not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  /profiles/categories:
    get:
      tags:
        - eaProfiles
      summary: Get Profile Categories
      operationId: getProfileCategories
      security:
        - ClientKey: []
          AuthorizationOptional: []
        - ClientKey: []
          Authorization: []
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Categories
          schema:
            $ref: '#/definitions/EaFacetSearch'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/profiles/{profileId}/email-verification':
    parameters:
      - $ref: '#/parameters/profileId'
    post:
      tags:
        - eaProfiles
      summary: Send email verification
      operationId: sendProfileEmailVerification
      responses:
        '200':
          description: Email verification sent
          schema:
            $ref: '#/definitions/EaSuccess'
        '404':
          description: Profile not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/profiles/email-verification/{code}':
    parameters:
      - in: path
        required: true
        name: code
        type: string
    post:
      tags:
        - eaProfiles
      summary: Verifiy profile email
      operationId: verifyProfileEmail
      security:
        - ClientKey: []
          Authorization: []
        - ClientKey: []
          AuthorizationOptional: []
      responses:
        '200':
          description: Email is verified
          schema:
            $ref: '#/definitions/EaEmailVerification'
        '404':
          description: Profile not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/profiles/{profileId}/status':
    parameters:
      - $ref: '#/parameters/profileId'
    put:
      tags:
        - eaProfiles
      summary: Set a profile status
      operationId: setStatus
      parameters:
        - in: body
          name: profileProps
          description: Profile object that needs to be created
          required: true
          schema:
            $ref: '#/definitions/EaProfileStatus'
      responses:
        '200':
          description: Profile Status
          schema:
            $ref: '#/definitions/EaProfileStatus'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  /profiles/usernamecheck:
    get:
      tags:
        - eaProfiles
      summary: Check username availability
      operationId: checkUsernameAvailability
      security: 
        - ClientKey: []
          AuthorizationOptional: []
        - ClientKey: []
          Authorization: []
      parameters:
        - in: query
          name: username
          description: Username to check for availability
          required: true
          type: string
      responses:
        '200':
          description: Username is available
          schema:
            $ref: '#/definitions/EaSuccess'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  /profiles/search:
    get:
      tags:
        - eaProfiles
      summary: Search Profiles
      operationId: searchProfile
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - in: query
          name: showInvited
          type: boolean
          required: false
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Profiles
          schema:
            $ref: '#/definitions/EaPagedProfile'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  /profiles/{profileId}/feed:
    get:
      tags:
        - eaProfiles
      summary: Profile Feed
      operationId: paginateProfileFeed
      parameters:
        - $ref: '#/parameters/profileId'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Paged Feed Items
          schema:
            $ref: '#/definitions/EaPagedFeedItem'
        '500':
          $ref: '#/responses/Default500ErrorResponse'

  /files:
    get:
      tags:
        - eaFiles
      summary: List of files
      operationId: listFiles
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Paged Files
          schema:
            $ref: '#/definitions/EaPagedFile'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eaFiles
      summary: Create a file
      operationId: createFile
      parameters:
        - in: body
          name: body
          description: File Info
          required: true
          schema:
            $ref: '#/definitions/EaFileUpdate'
      responses:
        '200':
          description: File
          schema:
            $ref: '#/definitions/EaFile'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  /files/{fileId}:
    parameters:
      - $ref: '#/parameters/fileId'
    get:
      tags:
        - eaFiles
      summary: Retrieve a file
      operationId: retrieveFile
      responses:
        '200':
          description: File
          schema:
            $ref: '#/definitions/EaFile'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eaFiles
      summary: Delete a file
      operationId: deleteFile
      responses:
        '200':
          description: File
          schema:
            $ref: '#/definitions/EaFile'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  /files/image:
    post:
      tags:
        - eaFiles
      summary: Create an image file
      operationId: createImage
      parameters:
        - in: body
          name: body
          description: File Info
          required: true
          schema:
            $ref: '#/definitions/EaFileUpload'
      responses:
        '200':
          description: File
          schema:
            $ref: '#/definitions/EaFile'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  /files/unsplash-image:
    post:
      tags:
        - eaFiles
      summary: Create an unsplash image file
      operationId: createUnsplashImage
      parameters:
        - in: body
          name: body
          description: File Info
          required: true
          schema:
            $ref: '#/definitions/EaUnsplashPhoto'
      responses:
        '200':
          description: File
          schema:
            $ref: '#/definitions/EaFile'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  /unsplash:
    get:
      tags:
        - eaUnsplash
      summary: Search unsplash for images
      operationId: searchPhotos
      parameters:
        - in: query
          type: string
          description: Keywords for search
          name: query
          required: false
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Paged Photos
          schema:
            $ref: '#/definitions/EaPagedUnsplashPhoto'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eaUnsplash
      summary: Download trigger
      operationId: downloadPhoto
      parameters:
        - in: query
          name: photoId
          description: Photo Id
          required: true
          type: string
      responses:
        '200':
          description: File
          schema:
            $ref: '#/definitions/EaSuccess'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/profile-invites':
    get:
      tags:
        - eaProfileInvites
      summary: Paginate over all invitations made by requested user
      operationId: listProfileInvites
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EaProfileInvite'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eaProfileInvites
      summary: Create a new profile invite
      operationId: createProfileInvite
      parameters:
        - in: body
          name: profileInviteProps
          description: Profile to invite
          required: true
          schema:
            $ref: '#/definitions/EaProfileInviteCreate'
      responses:
        '200':
          description: Profile invite created
          schema:
            $ref: '#/definitions/EaProfileInvite'
        '400':
          description: Invalid input
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/profile-invites/get-multi':
    get:
      tags:
        - eaProfileInvites
      summary: Get Multiple Profile Invites
      operationId: getMultipleInvites
      parameters:
        - in: query
          name: inviteIds
          type: array
          items:
            type: string
      responses:
        '200':
          description: List of Account
          schema:
            $ref: '#/definitions/EaPagedProfileInvite'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/profile-invites/{inviteId}':
    parameters:
      - $ref: '#/parameters/inviteId'
    delete:
      tags:
        - eaProfileInvites
      summary: Archive a profile invitation
      operationId: archiveProfileInvite
      responses:
        '200':
          description: Archived a profile invitation
          schema:
            $ref: '#/definitions/EaSuccess'
        '404':
          description: Profile Invitation not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'

  '/profile-invites/referral/{referralCode}':
    parameters:
      - $ref: '#/parameters/referralCode'
    get:
      tags:
        - eaProfileInvites
      security:
        - ClientKey: []
      summary: Get the pre-filled fields for on-boarding an invite
      operationId: getProfileInviteReferral
      responses:
        '200':
          description: Profile invitation with pre-fillable fields
          schema:
            $ref: '#/definitions/EaProfileInvite'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eaProfileInvites
      summary: Create a profile from a profile invite
      operationId: createProfileFromInvite
      parameters:
        - in: body
          name: profileProps
          description: Information to create profile
          required: true
          schema:
            $ref: '#/definitions/EaProfileUpdate'
      responses:
        '200':
          description: Profile created
          schema:
            $ref: '#/definitions/EaProfile'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/profiles/{profileId}/profile-tags':
    parameters:
      - $ref: '#/parameters/profileId'
    get:
      tags:
        - eaProfileTags
      summary: Paginate over all tag requests for the profile
      operationId: listTagRequests
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Paged list of all tag requests
          schema:
            $ref: '#/definitions/EaPagedTagRequest'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eaProfileTags
      summary: Request to tag a profile in an entity e.g. Event, Course, etc.
      operationId: upsertProfileTagRequest
      security:
        - ClientKey: []
          ServiceKey: []
          Authorization: []
      parameters:
        - in: body
          name: profileTagProps
          description: Model to create/update a profile tag request
          required: true
          schema:
            $ref: '#/definitions/EaTagRequestCreate'
      responses:
        '200':
          description: Profile tag request updated/created
          schema:
            $ref: '#/definitions/EaTagRequest'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/profile-tags/{profileTagId}':
    parameters:
      - $ref: '#/parameters/profileTagId'
    put:
      tags:
        - eaProfileTags
      summary: Accept or decline a profile tag request
      operationId: respondToProfileTagRequest
      parameters:
        - in: body
          name: profileTagProps
          description: Accept or decline tagging request
          required: true
          schema:
            $ref: '#/definitions/EaTagRespond'
      responses:
        '200':
          description: Profile tag request updated
          schema:
            $ref: '#/definitions/EaTagRequest'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eaProfileTags
      security:
        - ClientKey: []
          ServiceKey: []
          Authorization: []
      summary: Remove a profile tag request
      operationId: removeProfileTagRequest
      responses:
        '200':
          description: Profile tag request removed
          schema:
            $ref: '#/definitions/EaSuccess'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
parameters:
  entityType:
    name: entityType
    in: path
    description: Entity Type
    type: string
    required: true
  entityId:
    name: entityId
    in: path
    description: Entity Id
    type: string
    required: true
  limit:
    name: limit
    in: query
    description: Number of items returned
    type: integer
    format: int32
    minimum: 0
    exclusiveMinimum: true
    maximum: 50
    exclusiveMaximum: false
    default: 20
  cursor:
    name: cursor
    in: query
    description: Start Cursor for query
    type: string
  accountId:
    name: accountId
    in: path
    description: Account Id
    type: string
    required: true
  enhanced:
    name: enhanced
    in: query
    description: Gives you a more detailed entity but requires admin permissions usually
    type: boolean
    required: false
  fileId:
    name: fileId
    in: path
    description: File Id
    type: string
    required: true
  profileId:
    name: profileId
    in: path
    description: Profile Id
    type: string
    required: true
  inviteId:
    name: inviteId
    in: path
    description: Profile Invitation Id
    type: string
    required: true
  profileTagId:
    name: profileTagId
    in: path
    description: Profile Tag Id
    type: string
    required: true
  referralCode:
    name: referralCode
    in: path
    description: Profile invitation referral code
    type: string
    required: true
  searchQuery:
    in: query
    name: q
    type: string
  searchFacets:
    in: query
    name: facets
    type: string
    description: 'e.g [profiledIds:edropin],[profileIds:agdontario]'
responses:
  Default500ErrorResponse:
    description: An unexpected error occured.
    schema:
      $ref: '#/definitions/DefaultError'
  InvalidInputResponse:
    description: Validation exception
  UnauthorizedError:
    description: API key is missing or invalid
    headers:
      WWW_Authenticate:
        type: string
definitions:
  EaBaseId:
    type: object
    properties:
      id:
        type: string
      createdOn:
        type: integer
        format: int32
        readOnly: true
      modifiedOn:
        type: integer
        format: int32
        readOnly: true
      creatorId:
        type: string
      version:
        type: string
        readOnly: true
      isDeleted:
        type: boolean
        default: false
  EaPagination:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
      page:
        type: integer
      total:
        type: integer
      totalPages:
        type: integer
      facets:
        type: object
  EaDSPagination:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
      nextCursor:
        type: string
  EaFeedItem:
    type: object
    properties:
      id:
        type: string
      actor:
        $ref: '#/definitions/EaAccount'
      foreignObject:
        type: object
      object:
        type: object
      time:
        type: string
      verb:
        type: string
  
  EaPagedFeedItem:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/EaFeedItem'
      pageData:
        $ref: '#/definitions/EaDSPagination'
  DefaultError:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  EaPermissionInviteCreate:
    type: object
    required:
      - emails
      - permissions
    properties:
      invitedByName:
        type: string
      emails:
        type: array
        items:
          type: string
      permissions:
        type: array
        items:
          type: string
      message:
        type: string
        
  EaPermissionInvite:
    type: object
    properties:
      id:
        type: string
      modifiedOn:
        type: string
      creatorId:
        type: string
      entityType:
        type: string
      entityId:
        type: string
      permissions:
        type: object
      email:
        type: string
      message:
        type: string
      acceptedWhen:
        type: integer
      declinedWhen:
        type: integer
      acceptedById:
        type: string
      acceptedByName:
        type: string
  
  EaPermission:
    type: object
    properties:
      id:
        type: string
      modifiedOn:
        type: string
      creatorId:
        type: string
      entityType:
        type: string
      entityId:
        type: string
      permissions:
        type: object
      email:
        type: string
      name:
        type: string
      picture:
        type: string
      accountId:
        type: string
      
  EaPermissionInput:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
  EaPagedPermissionInvite:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EaDSPagination'
      allPermission:
        type: array
        items:
          type: string
      items:
        type: array
        items:
          $ref: '#/definitions/EaPermissionInvite'
  EaPagedPermission:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EaDSPagination'
      allPermission:
        type: array
        items:
          type: string
      items:
        type: array
        items:
          $ref: '#/definitions/EaPermission'
  EaPermissionCheck:
    type: object
    properties:
      hasPermission:
        type: boolean
      permission:
        $ref: '#/definitions/EaPermission'
  
  EaPermissionAccept:
    type: object
    properties:
      invite:
        $ref: '#/definitions/EaPermissionInvite'
      permission:
        $ref: '#/definitions/EaPermission'
  EaSuccess:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: object
  EaPasswordAuthentication:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
  EaAuthentication:
    type: object
    properties:
      idToken:
        type: string
      id:
        type: string
  EaAccountUpdate:
    type: object
    properties:
      name:
        type: string
      picture:
        type: string
      image:
        $ref: '#/definitions/EaImage'        
      website:
        type: string
      bio:
        type: string
        maxLength: 200
      email:
        type: string

  EaAccount:
    type: object
    allOf:
      - $ref: '#/definitions/EaBaseId'
      - $ref: '#/definitions/EaAccountUpdate'
      - properties:
          claims:
            type: object
            readOnly: true
  EaPagedAccount:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EaDSPagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EaAccount'
  EaClaims:
    type: object
    required:
      - claims
    properties:
      claims:
        type: object
  
  
  
  EaProfileUpdate:
    type: object
    properties:
      isOrganization:
        type: boolean
        default: false
      name:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      profileType:
        type: string
      picture:
        type: string
      image:
        $ref: '#/definitions/EaImage'
      bio:
        type: string
      website:
        type: string
      facebook:
        type: string
      linkedIn:
        type: string
      instagram:
        type: string
      categories:
        type: array
        items:
          type: string
        maxLength: 30
      agreeTerms:
        type: string
        enum:
          - v1
  
  EaProfile:
    type: object
    allOf:
      - $ref: '#/definitions/EaBaseId'
      - $ref: '#/definitions/EaProfileUpdate'
      - properties:
          username:
            type: string
          isEmailVerified:
            type: boolean
          status:
            type: string
          isInvited:
            type: boolean
            
  EaProfileCreate:
    type: object
    required:
      - username
      - isOrganization
      - name
      - profileType
      - email
      - firstName
      - lastName
      - agreeTerms
    allOf:
      - $ref: '#/definitions/EaProfileUpdate'
      - properties:
          username:
            type: string
  
  EaProfileStatus:
    type: object
    required:
      - status
      - message
    properties:
      status:
        type: string
        enum:
          - Pending Review
          - In Review
          - Approved
          - Banned
          - Suspended
      message:
        type: string
  EaPagedProfile:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EaPagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EaProfile'
      inviteItems:
        type: array
        items:
          $ref: '#/definitions/EaProfile'
      inviteFacets:
        type: object
      invitePageData:
        $ref: '#/definitions/EaPagination'
        
  EaFacetSearch:
    type: object
    properties:
      facetHits:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
            highlighted:
              type: string
            count:
              type: integer
      exhaustiveFacetsCount:
        type: boolean
      processingTimeMS:
        type: integer

  EaProfileInviteCreate:
    type: object
    required: 
      - email
      - profileType
      - name
      - inviteById
    properties:
      email:
        type: string
      profileType:
        type: string
      inviteById:
        type: string
      inviteFor:
        type: string
        description: e.g. Event Name
      name:
        type: string
      bio:
        type: string
      picture:
        type: string
  
  EaProfileInvite:
    type: object
    allOf: 
      - $ref: '#/definitions/EaBaseId'
      - $ref: '#/definitions/EaProfileInviteCreate'
      - properties:
          inviteByName:
            type: string
          isInvited:
            type: boolean
            default: true
          referralCode:
            type: string
  
  EaPagedProfileInvite:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EaPagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EaProfileInvite'
         
  EaTagRequestCreate:
    type: object
    required:
      - itemId
      - itemType
      - itemName
      - taggedById
    properties:
      itemType:
        type: string
        enum:
          - Event
      isInvited:
        type: boolean
        default: false
      taggedById:
        type: string
      itemId:
        type: string
      itemName:
        type: string
      picture:
        type: string
      roles:
        type: array
        items: 
          type: string
      itemLink:
        type: string
        description: Absolute url to the item that is tagged here
    
  EaTagRequest:
    type: object
    allOf:
      - $ref: '#/definitions/EaBaseId'
      - $ref: '#/definitions/EaTagRequestCreate'
      - properties:
          profileId:
            type: string
            description: Invited by profileId
          profileName:
            type: string
          taggedByName:
            type: string
          acceptedWhen: 
            type: number
          declinedWhen:
            type: number
  
  EaTagRespond:
    type: object
    properties:
      acceptRequest:
        type: boolean
        default: false
        
  EaPagedTagRequest:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EaPagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EaTagRequest'
          
  EaEmailVerification:
    type: object
    properties:
      profileName:
        type: string
      profileId:
        type: string
        
  EaFileUpdate:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      extension:
        type: string
      size:
        type: string
      type:
        type: array
        items:
          type: string
      path:
        type: string
      meta:
        type: object
      isImagekit:
        type: boolean
      isUnsplash:
        type: boolean
      externalId:
        type: string
  EaFile:
    type: object
    allOf:
      - $ref: '#/definitions/EaBaseId'
      - $ref: '#/definitions/EaFileUpdate'
  EaFileUpload:
    type: object
    required:
      - base64Image
    allOf:
      - $ref: '#/definitions/EaBaseId'
      - $ref: '#/definitions/EaFile'
      - properties:
          base64Image:
            type: string
  EaPagedFile:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EaDSPagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EaFile'
  
  EaUnsplashPhoto:
    type: object
    properties:
      id:
        type: string
      attributionUsername:
        type: string
      attributionName:
        type: string
      description:
        type: string
      photoUrlRaw:
        type: string
      photoUrl:
        type: string
      width:
        type: integer
      height:
        type: integer
  
  EaPagedUnsplashPhoto:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EaPagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EaUnsplashPhoto'  
  
  EaImage:
    type: object
    properties:
      isUnsplash: 
        type: boolean
      isImagekit: 
        type: boolean
      fileId:
        type: string
      path:
        type: string
      editParams:
        type: object
      url:
        type: string
      thumbnail:
        type: string
      caption:
        type: string