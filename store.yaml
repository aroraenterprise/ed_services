swagger: '2.0'
info:
  contact:
    email: dev@edropin.com
    name: Saj Arora
  description: Store service for eDropin
  license:
    name: UNLICENSED
  title: eDropin Store
  version: 1.0.11
host: localhost:9004
basePath: /
schemes:
  - http
paths:
  ### PERMISSIONS
  '/permissions/accept-invite/{inviteToken}':
    parameters:
      - description: Invite Token
        in: path
        name: inviteToken
        required: true
        type: string
    post:
      produces:
        - application/json
      parameters:
        - description: Accept or decline an invite
          enum:
            - accept
            - decline
          in: query
          name: v
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsPermissionAccept'
      tags:
        - esPermissions
      operationId: acceptPermissionInvite
      summary: Accept a permission invite
  '/permissions/{entityType}/{entityId}/accounts':
    parameters:
      - $ref: '#/parameters/entityType'
      - $ref: '#/parameters/entityId'
    get:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Permissions for account
          schema:
            $ref: '#/definitions/EsPagedPermission'
      tags:
        - esPermissions
      operationId: paginatePermissions
      summary: Get permissions for entity
  '/permissions/{entityType}/{entityId}/accounts/{accountId}':
    parameters:
      - $ref: '#/parameters/entityType'
      - $ref: '#/parameters/entityId'
      - $ref: '#/parameters/accountId'
    delete:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Permissions for account
          schema:
            $ref: '#/definitions/EsSuccess'
      tags:
        - esPermissions
      operationId: removePermissionsForAccount
      summary: Remove all permissions for account
    get:
      produces:
        - application/json
      parameters:
        - in: query
          name: permission
          required: false
          type: string
      responses:
        '200':
          description: Account has Permission
          schema:
            $ref: '#/definitions/EsPermissionCheck'
      tags:
        - esPermissions
      operationId: hasPermission
      summary: Check account has permission
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsPermissionInput'
      responses:
        '200':
          description: Set Account Permission
          schema:
            $ref: '#/definitions/EsPermission'
      tags:
        - esPermissions
      operationId: setPermission
      summary: Set account permission
  '/permissions/{entityType}/{entityId}/send-invite':
    parameters:
      - $ref: '#/parameters/entityType'
      - $ref: '#/parameters/entityId'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Object for permission invite
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsPermissionInviteCreate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsPagedPermissionInvite'
      tags:
        - esPermissions
      operationId: sendPermissionInvite
      summary: Send a permission invite
  ### PERMISSIONS END
  
  ### CURRENCY EXCHANGE
  /currency-exchange:
     get:
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsExchange'
      tags:
        - esCurrencyExchange
      operationId: getLatestExchange
      security:
        - AuthorizationOptional: []
          ClientKey: []
        - Authorization: []
          ClientKey: []
      summary: Get the latest exchange rates data
  ### CURRENCY EXCHANGE END
  
  /cart:
    delete:
      produces:
        - application/json
      parameters: []
      responses:
        '204':
          description: Order cleared
          schema:
            $ref: '#/definitions/EsCartChangeResponse'
      tags:
        - esCart
      operationId: emptyCart
      summary: Empty the user cart
    post:
      produces:
        - application/json
      parameters:
        - description: Cart body
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsCartInput'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsCartChangeResponse'
      tags:
        - esCart
      operationId: updateCart
      summary: Update the cart
  /cart/apply-promotion:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Promotional codes
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsPromotionInput'
      responses:
        '200':
          description: Updated Cart
          schema:
            $ref: '#/definitions/EsCartChangeResponse'
      tags:
        - esCart
      operationId: applyPromotion
      summary: Promotional codes and memberships can be entered here
  /cart/checkout:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Payment props for checkout
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsPaymentInput'
      responses:
        '200':
          description: >-
            List of orderItems grouped by merchant as Order that the user has
            checked out
          schema:
            $ref: '#/definitions/EsCartChangeResponse'
      tags:
        - esCart
      operationId: checkout
      summary: Endpoint to charge the customer for the items in their cart.
  '/cart/remove-item/{itemId}':
    parameters:
      - $ref: '#/parameters/itemId'
    post:
      produces:
        - application/json
      parameters: []
      responses:
        '204':
          description: Cart Item deleted
          schema:
            $ref: '#/definitions/EsCartChangeResponse'
      tags:
        - esCart
      operationId: removeItem
      summary: Delete a cart item
  
  '/cart/add-item/{itemId}':
    parameters:
      - $ref: '#/parameters/itemId'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Cart Item that needs to be upserted
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsCartItemInput'
      responses:
        '200':
          description: Cart Item upserted
          schema:
            $ref: '#/definitions/EsCartChangeResponse'
      tags:
        - esCart
      operationId: addItem
      summary: Upsert item to cart
  /cart/validate:
    post:
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/EsValidationInput'
      responses:
        '200':
          description: Cart Item validated
          schema:
            $ref: '#/definitions/EsCartChangeResponse'
      tags:
        - esCart
      operationId: validate
      summary: >-
        Validate Cart for a currency to ensure all items are available and
        pricing is all up to date and there are not potential conflicts
  /customers:
    get:
      produces:
        - application/json
      parameters:
        - collectionFormat: multi
          description: Expands the properties in the array
          in: query
          items:
            type: string
          name: expand
          required: false
          type: array
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsCustomer'
      tags:
        - esCustomers
      operationId: getUserCustomer
      summary: Get the users current customer information
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Customer input
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsCustomerInput'
      responses:
        '200':
          description: Customer updated
          schema:
            $ref: '#/definitions/EsCustomer'
      tags:
        - esCustomers
      operationId: updateCustomer
      summary: Update a customer
  /customers/cards:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: A new Customer
          schema:
            properties:
              items:
                items:
                  $ref: '#/definitions/EsCard'
                type: array
            type: object
      tags:
        - esCustomers
      operationId: listAllCards
      summary: Retrieve all saved cards for customer
  '/customers/cards/{cardId}':
    parameters:
      - $ref: '#/parameters/cardId'
    delete:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Card removed
          schema:
            $ref: '#/definitions/EsSuccess'
      tags:
        - esCustomers
      operationId: removeCard
      summary: Remove a card
  /memberships:
    get:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Memberships
          schema:
            $ref: '#/definitions/EsPagedMembership'
      tags:
        - esMemberships
      operationId: getAllMemberships
      summary: Get Memberships
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Membership object that needs to be created
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsMembershipUpdate'
      responses:
        '200':
          description: Membership created
          schema:
            $ref: '#/definitions/EsMembership'
      tags:
        - esMemberships
      operationId: createMembership
      summary: Create Membership
  '/memberships/{membershipId}':
    parameters:
      - $ref: '#/parameters/membershipId'
    delete:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Membership deleted
          schema:
            $ref: '#/definitions/EsSuccess'
      tags:
        - esMemberships
      operationId: deleteMembership
      summary: Delete an existing membership
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Membership
          schema:
            $ref: '#/definitions/EsMembership'
      tags:
        - esMemberships
      operationId: getMembership
      summary: Get a membership from eDropin
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Membership object that needs to be updated
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsMembershipUpdate'
      responses:
        '200':
          description: Membership updated
          schema:
            $ref: '#/definitions/EsMembership'
      tags:
        - esMemberships
      operationId: updateMembership
      summary: Update an existing membership
  '/memberships/{membershipId}/members':
    parameters:
      - description: Membership Id
        in: path
        name: membershipId
        required: true
        type: string
    get:
      produces:
        - application/json
      parameters:
        - in: query
          type: string
          name: filter
          description: 'Member Id or email'
          required: false
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Members belonging to this membership
          schema:
            $ref: '#/definitions/EsPagedMember'
      tags:
        - esMemberships
      operationId: listMembers
      summary: Get members for a membership
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Members that need to be updated/deleted
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsMembersUpdate'
      responses:
        '200':
          description: Membership updated
          schema:
            $ref: '#/definitions/EsPagedMember'
      tags:
        - esMemberships
      operationId: updateMembers
      summary: Update an existing membership
  '/memberships/{membershipId}/members/tasks':
    parameters:
      - $ref: '#/parameters/membershipId'
    delete:
      produces:
        - application/json
      parameters:
        - in: query
          name: apiKey
          required: true
          type: string
      responses:
        '200':
          description: Members deleted
          schema:
            $ref: '#/definitions/EsSuccess'
      security: []
      tags:
        - esMemberships
      operationId: deleteMembersTask
      summary: 'Delete all members in the membership [cloud tasks]'
  
  '/order-items':
    get:
      produces:
        - application/json
      parameters:
        - in: query
          name: merchantId
          required: true
          type: string
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/filterTimestamp'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsPagedOrderItem'
      tags:
        - esOrderItems
      operationId: listOrderItemsByMerchant
      summary: List merchant order items
  '/order-items/{orderItemId}':
    parameters:
      - $ref: '#/parameters/orderItemId'
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Order Item
          schema:
            $ref: '#/definitions/EsOrderItem'
      tags:
        - esOrderItems
      operationId: getOrderItem
      summary: Get the order item
  '/order-items/{orderItemId}/charge':
    parameters:
      - $ref: '#/parameters/orderItemId'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Charge body
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsOrderItemCharge'
      responses:
        '200':
          description: Order Item
          schema:
            $ref: '#/definitions/EsOrderItemTransaction'
      tags:
        - esOrderItems
      operationId: createCharge
      summary: 'Create an additional charge on an order item'
  '/order-items/{orderItemId}/refunds':
    parameters:
      - $ref: '#/parameters/orderItemId'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Refund Input
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsOrderItemRefund'
      responses:
        '200':
          description: Order Item
          schema:
            $ref: '#/definitions/EsOrderItemTransaction'
      tags:
        - esOrderItems
      operationId: createRefund
      summary: 'Create a refund for an order item'
  '/order-items/{orderItemId}/refund-requests':
    parameters:
      - $ref: '#/parameters/orderItemId'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Refund body
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsRefundRequest'
      responses:
        '200':
          description: Order Item
          schema:
            $ref: '#/definitions/EsOrderItem'
      tags:
        - esOrderItems
      operationId: createRefundRequest
      summary: Create a refund for an item
  '/order-items/{merchantId}/export':
    parameters:
      - $ref: '#/parameters/merchantId'
    get:
      tags:
        - esOrderItems
      summary: Export order items data
      operationId: exportOrderItems
      parameters:
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/filterTimestamp'
      responses:
        '200':
          description: Export order items as a csv
          schema:
            $ref: '#/definitions/EsCsv'
  
  '/merchants/{merchantId}':
    parameters:
      - $ref: '#/parameters/merchantId'
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsMerchant'
      tags:
        - esMerchants
      operationId: getMerchant
      summary: Get a Merchant from the directory
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Update merchant
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsMerchantUpdate'
      responses:
        '200':
          description: Merchant Updated
          schema:
            $ref: '#/definitions/EsMerchant'
      tags:
        - esMerchants
      operationId: updateMerchant
      summary: Update Merchant
  '/merchants/{merchantId}/enable-billing':
    parameters:
      - $ref: '#/parameters/merchantId'
    post:
      consumes:
        - text/plain
      produces:
        - application/json
      parameters:
        - description: Stripe Code To Enable Billing
          in: body
          name: body
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Billing updated
          schema:
            $ref: '#/definitions/EsMerchant'
      tags:
        - esMerchants
      operationId: enableBilling
      summary: Enable billing
  '/merchants/{merchantId}/fee-structure/{itemType}':
    parameters:
      - $ref: '#/parameters/merchantId'
      - $ref: '#/parameters/itemType'
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Fee structure
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsFeeStructure'
      responses:
        '200':
          description: Merchant fee structure updated
          schema:
            $ref: '#/definitions/EsMerchant'
      tags:
        - esMerchants
      operationId: updateFeeStructure
      summary: 'Setup fee structure for merchant [Admin Only]'
  /merchants/{merchantId}/feed:
    get:
      tags:
        - esMerchants
      summary: Merchant Feed
      operationId: listMerchantFeed
      parameters:
        - $ref: '#/parameters/merchantId'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Paged Feed Items
          schema:
            $ref: '#/definitions/EsPagedFeedItem'
  
  ### ORDERS
  /orders:
    get:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsPagedOrder'
      tags:
        - esOrder
      operationId: listUserOrders
      summary: Get orders for current user
  '/orders/{orderId}':
    parameters:
      - $ref: '#/parameters/orderId'
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsOrder'
      security:
        - AuthorizationOptional: []
          ClientKey: []
        - Authorization: []
          ClientKey: []
      tags:
        - esOrder
      operationId: getOrder
      summary: Get order by id
  '/orders/{orderId}/items':
    parameters:
      - $ref: '#/parameters/orderId'
    get:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsPagedOrderItem'
      tags:
        - esOrder
      operationId: listOrderItems
      summary: List order items
  ### END ORDERS
  
  /store/get-multi:
    get:
      produces:
        - application/json
      parameters:
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: storeIds
          type: array
        - $ref: '#/parameters/expand'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsPagedStoreItem'
      security:
        - AuthorizationOptional: []
          ClientKey: []
        - Authorization: []
          ClientKey: []
      tags:
        - esStore
      operationId: getMultipleStoreItems
      summary: Get multiple store items from the directory
  '/store':
    get:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsPagedStoreItem'
      tags:
        - esStore
      operationId: listStoreItems
      summary: Get all store items for merchant
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Store Item that needs to be created
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsStoreItemCreate'
      responses:
        '200':
          description: Store Item updated
          schema:
            $ref: '#/definitions/EsStoreItem'
      tags:
        - esStore
      operationId: createStoreItem
      summary: Create a store item
  '/store/{itemId}':
    parameters:
      - $ref: '#/parameters/itemId'
    delete:
      produces:
        - application/json
      parameters: []
      responses:
        '204':
          description: Store Item deleted
          schema:
            $ref: '#/definitions/EsStoreItem'
      tags:
        - esStore
      operationId: deleteStoreItem
      summary: Delete an existing Store Item
    get:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/expand'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsStoreItem'
      security:
        - AuthorizationOptional: []
          ClientKey: []
        - Authorization: []
          ClientKey: []
      tags:
        - esStore
      operationId: getStoreItem
      summary: Get a store item from the directory
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Store Item that needs to be updated
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsStoreItemUpdate'
      responses:
        '200':
          description: Store Item updated
          schema:
            $ref: '#/definitions/EsStoreItem'
      tags:
        - esStore
      operationId: updateStoreItem
      summary: Update a store item
  /user-memberships:
    get:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Customer Memberships
          schema:
            $ref: '#/definitions/EsPagedUserMembership'
      tags:
        - esUserMemberships
      operationId: listUserMemberships
      summary: List current user memberships
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Membership object to be added
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsUserMembershipUpdate'
      responses:
        '200':
          description: Membership created
          schema:
            $ref: '#/definitions/EsMembership'
      tags:
        - esUserMemberships
      operationId: addUserMembership
      summary: Add a membership to a user
  '/user-memberships/{userMembershipId}':
    parameters:
      - $ref: '#/parameters/userMembershipId'
    delete:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Membership deleted
          schema:
            $ref: '#/definitions/EsSuccess'
      tags:
        - esUserMemberships
      operationId: removeUserMembership
      summary: Delete an existing membership
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Membership object that needs to be updated
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EsUserMembershipUpdate'
      responses:
        '200':
          description: Membership updated
          schema:
            $ref: '#/definitions/EsUserMembership'
      tags:
        - esUserMemberships
      operationId: updateUserMembership
      summary: Update an existing user membership
  
  /charge-transactions/{transactionId}/refresh:
    post:
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/transactionId'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsChargeTransaction'
      tags:
        - esTransactions
      operationId: refreshChargeTransaction
      summary: Refreshes a charge transaction against the stripe account in order to make sure all amounts are synced
  /charge-transactions/retrieve-multi:
    get:
      produces:
        - application/json
      parameters:
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: transactionIds
          type: array
        - $ref: '#/parameters/expand'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsPagedChargeTransactions'
      tags:
        - esTransactions
      operationId: retrieveChargeTransactionsById
      summary: Get multiple charge transactions. Must all belong to one merchant ID
  /refund-transactions/retrieve-multi:
    get:
      produces:
        - application/json
      parameters:
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: transactionIds
          type: array
        - $ref: '#/parameters/expand'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsPagedRefundTransactions'
      tags:
        - esTransactions
      operationId: retrieveRefundTransactionsById
      summary: Get multiple refund transactions. Must all belong to one merchant ID
  
  /subscriptions/retrieve-multi:
    get:
      produces:
        - application/json
      parameters:
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: transactionIds
          type: array
        - $ref: '#/parameters/expand'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsPagedSubscriptions'
      tags:
        - esSubscriptions
      operationId: retrieveSubscriptionsById
      summary: Get multiple subscriptions. Must all belong to one merchant ID
  /subscriptions/{subscriptionId}:
    parameters:
      - $ref: '#/parameters/subscriptionId'
    delete:
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EsSubscription'
      tags:
        - esSubscriptions
      operationId: deleteSubscription
      summary: Cancel a subscription
      
definitions:
  EsBaseId:
    properties:
      createdOn:
        readOnly: true
        type: string
      id:
        type: string
      modifiedOn:
        readOnly: true
        type: string
      creatorId:
        type: string
      isDeleted:
        type: boolean
    type: object
  EsCard:
    properties:
      brand:
        type: string
      country:
        type: string
      email:
        type: string
      expiryMonth:
        type: integer
      expiryYear:
        type: integer
      id:
        type: string
      last4:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      name:
        type: string
    type: object
  EsCartChangeResponse:
    properties:
      cart:
        $ref: '#/definitions/EsCart'
      success:
        type: boolean
      errorMsg:
        type: string
      errorStatus:
        type: number
        format: integer
      claimCode:
        type: string
      order:
        $ref: '#/definitions/EsOrder'
    type: object
  EsCartItemInput:
    properties:
      quantity:
        type: integer
      secret:
        type: string
      installmentPlan:
        $ref: '#/definitions/EsInstallmentPlanInput'
      removePlan:
        type: boolean
        default: false
    type: object
  EsInstallmentPlanInput:
    type: object
    properties:
      interval:
        type: string
        enum:
          - week
          - month
          - year
      intervalCount:
        type: integer
        minimum: 1
        default: 1
      billingCycleAnchorTimestamp:
        type: integer
        minimum: 0
      payByTimestamp:
        type: integer
        minimum: 0
  EsInstallmentPlan:
    type: object
    allOf:
      - $ref: '#/definitions/EsInstallmentPlanInput'
      - properties:
          isInstallment:
            type: boolean
          amount:
            type: integer
            minimum: 0
          totalNumberOfPayments:
            type: integer
            minimum: 0
          deposit:
            type: integer
            minimum: 0
  EsCustomer:
    allOf:
      - $ref: '#/definitions/EsBaseId'
      - $ref: '#/definitions/EsCustomerInput'
      - properties:
          locationBasedCurrency:
            type: string
          defaultPaymentMethod:
            $ref: '#/definitions/EsCard'
          paymentMethods:
            type: array
            items:
              $ref: '#/definitions/EsCard'
          isCurrencySetByUser:
            type: boolean
          lastIp:
            type: string
          isAnonymous:
            type: string
    type: object
  EsCustomerInput:
    properties:
      currency:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      defaultPaymentMethodId:
        type: string
    required:
      - defaultCurrency
    type: object
  EsDiscount:
    allOf:
      - $ref: '#/definitions/EsDiscountInput'
    type: object
  EsDiscountInput:
    properties:
      discountByAmount:
        format: int32
        type: integer
        minimum: 0
      discountByPercentage:
        type: number
        minimum: 0
        maximum: 1
      discountType:
        enum:
          - Membership
          - Referral Code
          - Limited Time
        type: string
      endTimestamp:
        format: int32
        type: integer
        minimum: 0
      membershipId:
        type: string
      membershipName:
        type: string
      referralCode:
        type: string
      startTimestamp:
        format: int32
        type: integer
        minimum: 0
      isStackable:
        type: boolean
        default: false
      minimumSalePrice:
        type: integer
        minimum: 0
    required:
      - discountType
      - startTimestamp
      - endTimestamp
    type: object
  EsFeeStructure:
    properties:
      active:
        default: true
        type: boolean
      feeAmount:
        default: 0
        type: number
      feeMaximum:
        type: integer
      feeMinimum:
        default: 0
        type: integer
      feeType:
        enum:
          - fixed
          - percentage
          - none
        type: string
      perItem:
        default: true
        type: boolean
    required:
      - feeType
      - feeAmount
    type: object
  EsMember:
    properties:
      id:
        type: string
      active:
        default: true
        type: boolean
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      memberId:
        type: string
      memberSince:
        type: number
      name:
        type: string
      title:
        type: string
      group:
        type: array
        items:
          type: string
    type: object
  EsMembersUpdate:
    properties:
      members:
        items:
          allOf:
            - $ref: '#/definitions/EsMember'
            - properties:
                action:
                  default: update
                  enum:
                    - delete
                    - update
                  type: string
          required:
            - action
            - memberId
          type: object
        type: array
    required:
      - members
    type: object
  EsMembership:
    allOf:
      - $ref: '#/definitions/EsBaseId'
      - $ref: '#/definitions/EsMembershipUpdate'
      - properties:
          totalActiveMembers:
            type: integer
          totalMembers:
            type: integer
    type: object
  EsMembershipUpdate:
    properties:
      agreeTerms:
        enum:
          - v1
        type: string
      description:
        type: string
      name:
        type: string
      organizerId:
        type: string
    required:
      - name
      - agreeTerms
      - organizerId
    type: object
  EsMerchant:
    allOf:
      - $ref: '#/definitions/EsBaseId'
      - $ref: '#/definitions/EsMerchantUpdate'
      - properties:
          name:
            type: string
          username:
            type: string
          email:
            type: string
          feeStructure:
            additionalProperties:
              $ref: '#/definitions/EsFeeStructure'
            type: object
          stripeId:
            type: string
    type: object
  EsMerchantUpdate:
    properties:
      storeCurrency:
        type: string
      availableCurrencies:
        type: array
        items:
          type: string
      currencyRounding:
        type: object
        additionalProperties:
          type: string
    required:
      - name
      - storeCurrency
    type: object
  EsOrderItemCharge:
    type: object
    required:
      - amount
      - reason
    properties:
      amount:
        minimum: 0
        type: integer
      reason:
        type: string
  EsOrderItemRefund:
    type: object
    required:
      - amount
      - reason
    properties:
      amount:
        minimum: 0
        type: integer
      reason:
        type: string
      refundRequestId:
        type: string
      transactionIds:
        type: array
        items:
          type: string
  EsOrderItemTransaction:
    type: object
    properties:
      transactionType:
        type: string
        enum:
          - refund
          - charge
      orderItem:
        $ref: '#/definitions/EsOrderItem'
      chargeTransaction:
        $ref: '#/definitions/EsChargeTransaction'
      refundTransaction:
        $ref: '#/definitions/EsRefundTransaction'
  EsCartInput:
    type: object
    properties:
      currency:
        type: string
      transferCode:
        type: string
  EsCart:
    allOf:
      - $ref: '#/definitions/EsBaseId'
      - properties:
          creatorId:
            type: string
          requireCC:
            type: boolean
            default: true
          checkoutCurrency:
            type: string
          customerId:
            type: string
          items:
            type: object
            additionalProperties:
              $ref: '#/definitions/EsCartItem'
          orderItems:
            items:
              $ref: '#/definitions/EsOrderItem'
            type: array
          itemQuantity:
            default: 0
            minimum: 0
            type: integer
          subtotal:
            default: 0
            minimum: 0
            type: integer
          dueUpfront:
            type: integer
            default: 0
            minimum: 0
          user:
            $ref: '#/definitions/EsOrderUser'
          valid:
            default: false
            type: boolean
          needsMoreInformation:
            type: boolean
            default: false
          validUntil:
            default: 0
            minimum: 0
            type: integer
          appliedPromotions:
            type: array
            items:
              $ref: '#/definitions/EsCartPromotion'
          validMemberships:
            additionalProperties:
              $ref: '#/definitions/EsCartMembership'
            type: object
          lockedUntilTimestamp:
            type: integer
          surveyResponses:
            type: array
            items:
              $ref: '#/definitions/EsCartSurveyResponse'
          transferCode:
            type: string
    type: object
  
  EsCartSurveyResponse:
    type: object
    properties:
      service: 
        type: string
      surveyId: 
        type: string
      orderItemId: 
        type: string
      responseId: 
        type: string
      itemId: 
        type: string
  
  EsCartItem:
    type: object
    properties:
      id:
        type: string
      quantity:
        type: integer
        minimum: 0
      secret:
        type: string
      installmentPlan:
        $ref: '#/definitions/EsInstallmentPlan'
      valid:
        type: boolean
        default: true
      errors:
        type: array
        items:
          type: string
            
  
  EsCartPromotion:
    type: object
    properties:
      memberId:
        type: string
      membershipId:
        type: string
      membershipName:
        type: string
      referralCode:
        type: string
  
  EsCartMembership:
    type: object
    properties:
      membershipName:
        type: string
    
  EsOrder:
    allOf:
      - $ref: '#/definitions/EsBaseId'
      - properties:
          ownerId:
            type: string
          isAnonymous:
            type: boolean
          isCheckedOut:
            type: boolean
          checkedOutWhen:
            type: integer
          isProcessing:
            type: boolean
          processingStartedWhen:
            type: integer
            minimum: 0
          status:
            type: string
            enum:
              - succeeded
              - failed
          checkoutCurrency:
            type: string
          requireCC:
            type: boolean
            default: true
          customerId:
            type: string
          itemQuantity:
            default: 0
            minimum: 0
            type: integer
          itemQuantityAvailable:
            default: 0
            minimum: 0
            type: integer
          subtotal:
            default: 0
            minimum: 0
            type: integer
          dueUpfront:
            default: 0
            minimum: 0
            type: integer
          orderItemIds:
            items:
              type: string
            type: array
          failedOrderItemIds:
            type: array
            items:
              type: string
          orderItems:
            items:
              $ref: '#/definitions/EsOrderItem'
            type: array
          chargeTransactionIds:
            type: array
            items:
              type: string
          subscriptionIds:
            type: array
            items:
              type: string
          user:
            $ref: '#/definitions/EsOrderUser'
          appliedPromotions:
            type: array
            items:
              $ref: '#/definitions/EsOrderItemPromotion'
    type: object
  EsOrderItem:
    type: object
    allOf:
      - $ref: '#/definitions/EsBaseId'
      - properties:
          ownerId:
            type: string
          merchantId:
            type: string
          merchantName:
            type: string
          merchantUsername:
            type: string
          itemType:
            type: string
          category:
            type: string
          categoryId:
            type: string
          storeItemId:
            type: string
          name:
            type: string
          shortName:
            type: string
          picture:
            type: string
          info:
            type: string
          link:
            type: string
          isRefundable:
            type: boolean
          refundAvailableUntil:
            type: integer
          refundPolicy:
            type: string
          requireCC:
            type: boolean
            default: true
          isCheckedOut:
            type: boolean
            default: false
          checkedOutWhen:
            type: integer
          isFailed:
            type: boolean
          failure:
            type: string
          appliedPromotions:
            type: array
            items:
              $ref: '#/definitions/EsOrderItemPromotion'
          itemQuantity:
            type: integer
            minimum: 0
            default: 0
          itemQuantityAvailable:
            type: integer
            minimum: 0
            default: 0
          items:
            items:
              $ref: '#/definitions/EsOrderItemUser'
            type: array
          retailPrice:
            type: integer
            minimum: 0
            default: 0
          salePrice:
            type: integer
            minimum: 0
            default: 0
          subtotal:
            default: 0
            minimum: 0
            type: integer
          dueUpfront:
            default: 0
            minimum: 0
            type: integer
          platformFee:
            default: 0
            minimum: 0
            type: integer
          payInInstallments:
            type: boolean
          installmentPlan:
            $ref: '#/definitions/EsInstallmentPlan'
          totalPaymentsMade:
            minimum: 0
            type: integer
          totalNumberOfPayments:
            minimum: 0
            type: integer
          paid:
            type: boolean
            default: false
          orderId:
            type: string
          user:
            $ref: '#/definitions/EsOrderUser'
          surveys:
            type: object
            additionalProperties:
              $ref: '#/definitions/EsCheckoutSurvey'
          storeCurrency:
            type: string
          presentmentCurrency:
            type: string
          exchangeRate:
            type: number
            default: 1.0
          exchangeId:
            type: string
          customerId:
            type: string
          transactionIds:
            type: array
            items:
              type: string
          subscriptionId:
            type: string
          chargeTotal:
            default: 0
            minimum: 0
            type: integer
          chargedInPresentmentCurrency:
            default: 0
            minimum: 0
            type: integer
          refundTotal:
            default: 0
            minimum: 0
            type: integer
          refundInPresentmentCurrency:
            default: 0
            minimum: 0
            type: integer
          platformFeeTotal:
            default: 0
            minimum: 0
            type: integer
          paymentProcessorFeeTotal:
            default: 0
            minimum: 0
            type: integer
          feeTotal:
            default: 0
            minimum: 0
            type: integer
          isRefundPending:
            type: boolean
          pendingRefundId:
            type: string
          refunds:
            type: array
            items:
              $ref: '#/definitions/EsRefund'
          exchangeRates:
            type: object
            additionalProperties:
              $ref: '#/definitions/EsExchangeRate'
          claimCode:
            type: string
          needsMoreInformation:
            type: boolean
            default: false
  EsRefundRequest:
    properties:
      message:
        type: string
      quantity:
        type: integer
    required:
      - quantity
      - reason
    type: object
  
  EsRefund:
    type: object
    allOf:
      - $ref: '#/definitions/EsRefundRequest'
      - properties:
          requestedWhen:
            type: integer
          processedWhen:
            type: integer
          isProcessed:
            type: boolean
          processedById:
            type: string
          quantity:
            type: integer
          message:
            type: integer
          merchantNotes:
            type: string
          amountRefunded:
            type: integer
            
  EsOrderItemPromotion:
    type: object
    properties:
      discountType: 
        type: string
      memberId:
        type: string
      membershipId:
        type: string
      membershipName:
        type: string
      referralCode:
        type: string
      appliedWhen:
        type: integer
      discountByAmount:
        type: integer
        minimum: 0
      discountByPercentage:
        type: number
        minimum: 0
        maximum: 0

  EsChargeTransaction:
    type: object
    allOf:
      - $ref: '#/definitions/EsBaseId'
      - properties:
          updatedWhen:
            type: integer
          orderId:
            type: string
          orderItemAllocations:
            type: object
            additionalProperties:
              $ref: '#/definitions/EsOrderItemAllocation'
          isProcessed:
            type: boolean
          processedWhen:
            type: integer
            minimum: 0
          chargeId:
            type: string
          merchantId:
            type: string
          merchantName:
            type: string
          merchantUsername:
            type: string
          merchantStripeId:
            type: string
          customerId:
            type: string
          email:
            type: string
          txnStatus:
            type: string
          notes:
            type: string
          presentmentCurrency:
            type: string
          currency:
            type: string
          presentmentAmount:
            minimum: 0
            default: 0
            type: integer
          amount:
            minimum: 0
            default: 0
            type: integer
          platformFee:
            minimum: 0
            type: integer
            default: 0
          presentmentPlatformFee:
            minimum: 0
            type: integer
            default: 0
          paymentProcessorFee:
            minimum: 0
            type: integer
            default: 0
          paymentProcessorExchangeRate:
            minimum: 0
            type: number
            format: float
            default: 0
          net:
            minimum: 0
            type: integer
            default: 0
          platformFeeId:
            type: string
          refundTotal:
            minimum: 0
            type: integer
            default: 0
          presentmentRefundTotal:
            minimum: 0
            type: integer
            default: 0
          refundIds:
            type: array
            items:
              type: string
          refundStatus:
            type: string
  
  EsOrderItemAllocation:
    type: object
    properties:
      allocatedCharge:
        type: integer
        minimum: 0
      allocatedPlatformFee:
        type: integer
        minimum: 0
      allocatedRefunds:
        type: object
        additionalProperties:
          $ref: '#/definitions/EsAllocatedRefund'
  EsAllocatedRefund:
    type: object
    properties:
      amount:
        type: integer
        minimum: 0
      presentmentAmount:
        type: integer
        minimum: 0
  
  EsRefundTransaction:
    type: object
    allOf:
      - $ref: '#/definitions/EsBaseId'
      - properties:
          updatedWhen:
            type: integer
          chargeTxId:
            type: string
          chargeId:
            type: string
          orderItemAllocations:
            type: object
            additionalProperties:
              $ref: '#/definitions/EsAllocatedRefund'
          merchantId:
            type: string
          merchantName:
            type: string
          merchantUsername:
            type: string
          merchantStripeId:
            type: string
          email:
            type: string
          txnStatus:
            type: string
          notes:
            type: string
          presentmentCurrency:
            type: string
          currency:
            type: string
          presentmentAmount:
            minimum: 0
            default: 0
            type: integer
          amount:
            minimum: 0
            default: 0
            type: integer
          paymentProcessorExchangeRate:
            minimum: 0
            type: number
            format: float
            default: 0
  
  EsSubscription:
    type: object
    allOf:
      - $ref: '#/definitions/EsBaseId'
      - properties:
          updatedWhen:
            type: integer
          merchantId:
            type: string
          merchantName:
            type: string
          merchantUsername:
            type: string
          merchantStripeId:
            type: string
          customerId:
            type: string
          storeItemId:
            type: string
          orderItemId:
            type: string
          orderId:
            type: string
          presentmentCurrency:
            type: string
          presentmentAmount:
            minimum: 0
            default: 0
            type: integer
          isActive:
            type: boolean
            default: false
          activatedWhen:
            type: integer
            minimum: 0
          planId:
            type: string
          subId:
            type: string
          billingCycleAnchorTimestamp:
            type: integer
            minimum: 0
          payByTimestamp:
            type: integer
            minimum: 0
          interval:
            type: string
          intervalCount:
            type: integer
            minimum: 1
            maximum: 2
            default: 1
          totalNumberOfPayments:
            type: integer
            minimum: 0
            default: 0
          totalPaymentsMade:
            type: integer
            minimum: 0
          status:
            type: string
          failure:
            type: string
          isCanceled:
            type: boolean
          canceledWhen:
            type: integer
          isComplete:
            type: boolean
          completedWhen:
            type: integer 
        
  EsOrderItemUser:
    properties:
      id:
        type: string
      surveyResponses:
        type: object
        additionalProperties:
          type: string
      isDeleted:
        type: boolean
        default: false
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
    type: object

  EsOrderUser:
    properties:
      email:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
    
  EsPagedMember:
    properties:
      deleted:
        items:
          type: string
        type: array
      items:
        items:
          $ref: '#/definitions/EsMember'
        type: array
      pageData:
        $ref: '#/definitions/EsDSPagination'
    type: object
  EsPagedMembership:
    properties:
      items:
        items:
          $ref: '#/definitions/EsMembership'
        type: array
      pageData:
        $ref: '#/definitions/EsPagination'
    type: object
  EsPagedOrder:
    properties:
      items:
        items:
          $ref: '#/definitions/EsOrder'
        type: array
      pageData:
        $ref: '#/definitions/EsDSPagination'
    type: object
  EsPagedOrderItem:
    properties:
      items:
        items:
          $ref: '#/definitions/EsOrderItem'
        type: array
      pageData:
        $ref: '#/definitions/EsPagination'
    type: object
  EsPagedPermission:
    properties:
      allPermission:
        items:
          type: string
        type: array
      items:
        items:
          $ref: '#/definitions/EsPermission'
        type: array
      pageData:
        $ref: '#/definitions/EsDSPagination'
    type: object
  EsPagedPermissionInvite:
    properties:
      allPermission:
        items:
          type: string
        type: array
      items:
        items:
          $ref: '#/definitions/EsPermissionInvite'
        type: array
      pageData:
        $ref: '#/definitions/EsDSPagination'
    type: object
  EsPagedStoreItem:
    properties:
      items:
        items:
          $ref: '#/definitions/EsStoreItem'
        type: array
      pageData:
        $ref: '#/definitions/EsPagination'
    type: object
  EsPagedUserMembership:
    properties:
      items:
        items:
          $ref: '#/definitions/EsUserMembership'
        type: array
      pageData:
        $ref: '#/definitions/EsPagination'
    type: object
  EsPagedChargeTransactions:
    properties:
      items:
        items:
          $ref: '#/definitions/EsChargeTransaction'
        type: array
      pageData:
        $ref: '#/definitions/EsDSPagination'
    type: object
  EsPagedRefundTransactions:
    properties:
      items:
        items:
          $ref: '#/definitions/EsRefundTransaction'
        type: array
      pageData:
        $ref: '#/definitions/EsDSPagination'
    type: object
  EsPagedSubscriptions:
    properties:
      items:
        items:
          $ref: '#/definitions/EsSubscription'
        type: array
      pageData:
        $ref: '#/definitions/EsDSPagination'
    type: object
  EsPagination:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
      page:
        type: integer
      total:
        type: integer
      totalPages:
        type: integer
      facets:
        type: object
  EsDSPagination:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
      nextCursor:
        type: string
  EsPaymentInput:
    properties:
      email:
        type: string
      name:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      paymentMethodId:
        type: string
      source:
        type: string
      captcha:
        type: string
    required:
      - email
      - name
    type: object
  EsPermission:
    properties:
      accountId:
        type: string
      creatorId:
        type: string
      email:
        type: string
      entityId:
        type: string
      entityType:
        type: string
      id:
        type: string
      modifiedOn:
        type: string
      name:
        type: string
      permissions:
        type: object
      picture:
        type: string
    type: object
  EsPermissionAccept:
    properties:
      invite:
        $ref: '#/definitions/EsPermissionInvite'
      permission:
        $ref: '#/definitions/EsPermission'
    type: object
  EsPermissionCheck:
    properties:
      hasPermission:
        type: boolean
      permission:
        $ref: '#/definitions/EsPermission'
    type: object
  EsPermissionInput:
    properties:
      permissions:
        type: array
        items:
          type: string
    type: object
  EsPermissionInvite:
    properties:
      acceptedById:
        type: string
      acceptedByName:
        type: string
      acceptedWhen:
        type: integer
      creatorId:
        type: string
      declinedWhen:
        type: integer
      email:
        type: string
      entityId:
        type: string
      entityType:
        type: string
      id:
        type: string
      message:
        type: string
      modifiedOn:
        type: string
      permissions:
        type: object
    type: object
  EsPermissionInviteCreate:
    properties:
      emails:
        items:
          type: string
        type: array
      invitedByName:
        type: string
      message:
        type: string
      permissions:
        items:
          type: string
        type: array
    required:
      - emails
      - permissions
    type: object
  EsPromotionInput:
    properties:
      memberId:
        type: string
      membershipId:
        type: string
      referralCode:
        type: string
    type: object
      
  EsStoreItem:
    allOf:
      - $ref: '#/definitions/EsBaseId'
      - $ref: '#/definitions/EsStoreItemUpdate'
      - properties:
          discounts:
            items:
              $ref: '#/definitions/EsDiscount'
            type: array
          merchantId:
            type: string
          merchantName:
            type: string
          merchantUsername:
            type: string
          totalSold:
            format: int32
            type: integer
          storeCurrency:
            type: string
          exchangeRates:
            type: object
            additionalProperties:
              $ref: '#/definitions/EsExchangeRate'
          isDeactivated:
            type: boolean
            default: false
    type: object
  
  EsExchangeRate:
    type: number
    format: float
  EsExchange: 
    type: object
    allOf:
      - $ref: '#/definitions/EsBaseId'
      - properties:
          rates:
            type: object
            additionalProperties:
              $ref: '#/definitions/EsExchangeRate'
          base:
            type: string
          spread:
            type: number
            format: float
  EsStoreItemUpdate:
    properties:
      availableCurrencies:
        items:
          type: string
        type: array
      itemType:
        type: string
      filters:
        type: array
        items:
          type: string
      category:
        enum:
          - event
          - membership
        type: string
      categoryId:
        type: string
      name:
        type: string
      shortName:
        type: string
      link:
        type: string
      picture:
        type: string
      info:
        type: string
      noItemDetails:
        type: boolean
        description: 'Collects first name, last name and email for each item sold independently. Default true'
        default: false
      totalInventory:
        format: int32
        type: integer
      startSaleTimestamp:
        type: integer
        minimum: 0
      endSaleTimestamp:
        type: integer
        minimum: 0
      isFree:
        type: boolean
        default: false
      requireCC:
        type: boolean
        default: true
      status:
        enum:
          - open
          - closed
          - soldOut
        type: string
      metadata:
        type: object
      surveys:
        type: object
        additionalProperties:
          $ref: '#/definitions/EsCheckoutSurveyInput'
      unlockSecret:
        type: string
      retailPrice:
        format: int32
        type: integer
      oneOffPayment:
        type: boolean
        default: false
      recurring:
        type: boolean
        default: false
      recurringOptions:
        $ref: '#/definitions/EsRecurringInput'
      discounts:
        items:
          $ref: '#/definitions/EsDiscountInput'
        type: array
      refundAvailableUntil:
        type: number
        format: integer
      refundPolicy:
        type: string
      isRefundable:
        type: boolean
      timezone:
        type: string
    type: object
  
  EsCheckoutSurveyInput:
    type: object
    properties:
      service:
        type: string
      surveyId:
        type: string
  
  EsCheckoutSurvey:
    type: object
    allOf:
      - $ref: '#/definitions/EsCheckoutSurveyInput'
      - properties:
          completedWhen:
            type: integer
            minimum: 0
          isCompleted:
            type: boolean
  
  EsRecurringInput:
    type: object
    required:
      - isInstallment
    properties:
      deposit:
        type: integer
        minimum: 0
      isInstallment:
        type: boolean
        default: false
      intervalOptions:
        type: array
        items:
          type: string
          enum:
            - week
            - month
            - year
      payByTimestamp:
        type: integer
        minimum: 0
      availableUntil:
        type: integer
        minimum: 0
  EsStoreItemCreate:
    type: object
    allOf:
      - $ref: '#/definitions/EsStoreItemUpdate'
      - properties:
          merchantId:
            type: string
    required:
      - merchantId
      - name
      - category
      - categoryId
      - itemType
      - totalInventory
      - startSaleTimestamp
      - endSaleTimestamp
      - retailPrice
      - timezone
  EsSuccess:
    properties:
      message:
        type: object
      success:
        type: boolean
    type: object
  EsUserMembership:
    allOf:
      - $ref: '#/definitions/EsBaseId'
      - $ref: '#/definitions/EsUserMembershipUpdate'
      - properties:
          id:
            type: string
          memberId:
            type: string
          membershipId:
            type: string
          membershipName:
            type: string
    type: object
  EsUserMembershipUpdate:
    properties:
      memberId:
        type: string
      membershipId:
        type: string
      membershipName:
        type: string
    required:
      - membershipId
      - membershipName
      - memberId
    type: object
  
  EsFeedItem:
    type: object
    properties:
      id:
        type: string
      actor:
        $ref: '#/definitions/EsOrderUser'
      foreignId:
        type: string
      object:
        type: object
      time:
        type: string
      verb:
        type: string
  
  EsPagedFeedItem:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/EsFeedItem'
      pageData:
        $ref: '#/definitions/EsDSPagination'
  
  EsValidationInput:
    type: object
    properties:
      orderItemUsers:
        type: object
        additionalProperties:
          $ref: '#/definitions/EsOrderItemUser'
      surveyResponses:
        type: array
        items:
          type: string
  
  EsCsv:
    type: object
    properties:
      csv:
        type: string
      filename:
        type: string

securityDefinitions:
  Authorization:
    in: header
    name: Authorization
    description: Required Authorization Key
    type: apiKey
  AuthorizationOptional:
    in: header
    name: Authorization
    description: Optional Authorization Key
    type: apiKey
  ClientKey:
    in: header
    name: X-Client-Key
    description: Client Key
    type: apiKey
security:
  - Authorization: []
    ClientKey: []
tags:
  - description: Permissions manager
    name: esPermissions
  - description: Merchant management
    name: esMerchants
  - description: Store management
    name: esStore
  - description: User Cart for store items
    name: esCart
  - description: Order items for user
    name: esOrder
  - description: Merchant Order items
    name: esOrderItems
  - description: Customers of eDropin
    name: esCustomers
  - description: Memberships managed in eDropin
    name: esMemberships
  - description: User memberships managed in eDropin
    name: esUserMemberships
  - description: Currency Exchange
    name: esCurrencyExchange
  - description: Transactional information
    name: esTransactions
  - description: Subscription information
    name: esSubscriptions

parameters:
  accountId:
    description: Account Id
    in: path
    name: accountId
    required: true
    type: string
  cardId:
    description: Card Id
    in: path
    name: cardId
    required: true
    type: string
  cursor:
    description: Start Cursor for query
    in: query
    name: cursor
    type: string
  enhanced:
    description: Gives you a more detailed entity but requires admin permissions usually
    in: query
    name: enhanced
    required: false
    type: boolean
  entityId:
    description: Entity Id
    in: path
    name: entityId
    required: true
    type: string
  entityType:
    description: Entity Type
    in: path
    name: entityType
    required: true
    type: string
  expand:
    collectionFormat: multi
    description: Expands the properties in the array
    in: query
    items:
      type: string
    name: expand
    required: false
    type: array
  itemId:
    description: Store Item Id
    in: path
    name: itemId
    required: true
    type: string
  itemType:
    description: Store Item Type
    in: path
    name: itemType
    required: true
    type: string
  limit:
    default: 20
    description: Number of items returned
    exclusiveMaximum: false
    exclusiveMinimum: true
    format: int32
    in: query
    maximum: 100
    minimum: 0
    name: limit
    type: integer
  membershipId:
    description: Membership Id
    in: path
    name: membershipId
    required: true
    type: string
  merchantId:
    description: Merchant Id
    in: path
    name: merchantId
    required: true
    type: string
  orderId:
    description: Order Id
    in: path
    name: orderId
    required: true
    type: string
  orderItemId:
    description: Order Item Id
    in: path
    name: orderItemId
    required: true
    type: string
  searchFacets:
    description: 'e.g JSON.stringify([profiledIds:edropin],[profileIds:agdontario])'
    in: query
    name: facets
    type: string
  searchQuery:
    in: query
    name: q
    type: string
  filterTimestamp:
    in: query
    name: filterTimestamp
    description: Filter by start and end time e.g. (starting after 1111 ending before 1234 = 1111,1234)
    type: array
    items:
      type: integer
    maxLength: 2
  transactionId:
    in: path
    description: Transaction ID
    name: transactionId
    required: true
    type: string
  subscriptionId:
    in: path
    description: Subscription ID
    name: subscriptionId
    required: true
    type: string
  userMembershipId:
    description: User membership id
    in: path
    name: userMembershipId
    required: true
    type: string

