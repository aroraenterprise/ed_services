swagger: '2.0'
info:
  description: Events service for eDropin
  version: 1.0.0
  title: eDropin Events
  license:
    name: UNLICENSED
  contact:
    name: Saj Arora
    email: dev@edropin.com
host: 'events-dot-edropin-playground.appspot.com'
basePath: /v1
tags:
  - name: eeEvents
    description: Events
schemes:
  - https
produces:
  - application/json
securityDefinitions:
  Authorization:
    type: apiKey
    in: header
    name: Authorization
  ClientKey:
    type: apiKey
    in: header
    name: X-Client-Key
security:
  - ClientKey: []
    Authorization: []
paths:
  ### Events
  '/events':
    get:
      tags:
        - eeEvents
      summary: Get Events
      operationId: getAllEvents
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Events
          schema:
            $ref: '#/definitions/EePagedEvent'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eeEvents
      summary: Create Event
      operationId: createEvent
      parameters:
        - in: body
          name: eventProps
          description: Event object that needs to be created
          required: true
          schema:
            $ref: '#/definitions/EeEventUpdate'
      responses:
        '200':
          description: Event created
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/get-multi':
    get:
      tags:
        - eeEvents
      summary: Get Multiple Events
      operationId: getMultipleEvents
      parameters:
        - in: query
          name: eventIds
          type: array
          items:
            type: string
      responses:
        '200':
          description: Event
          schema:
            type: array
            items:
              $ref: '#/definitions/EeEvent'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEvents
      summary: Get a Event from the directory
      operationId: getEvent
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          description: Invalid ID supplied
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEvents
      summary: Update an existing Event
      operationId: updateEvent
      parameters:
        - in: body
          name: eventProps
          description: Event object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/EeEventUpdate'
      responses:
        '200':
          description: Event updated
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEvents
      summary: Delete an existing Event
      operationId: deleteEvent
      responses:
        '204':
          description: Event deleted
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/profiles':
    parameters:
      - $ref: '#/parameters/eventId'
    put:
      tags:
        - eeEvents
      summary: Update Event profile roles
      operationId: upsertEventProfile
      parameters:
        - in: body
          name: eventProfileRoles
          description: Profile role to update
          required: true
          schema:
            type: object
      responses:
        '200':
          description: Event Profile role updated
          schema:
            type: object
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event or Profile not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/courses':
    parameters:
      - $ref: '#/parameters/eventId'
    put:
      tags:
        - eeEvents
      summary: Update Event profile roles
      operationId: upsertEventCourse
      parameters:
        - in: body
          name: eventCourses
          description: Courses to update
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/EeEventCourse'
      responses:
        '200':
          description: Event Course updated
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event or Profile not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/search':
    get:
      tags:
        - eeEvents
      summary: Search Events
      operationId: searchEvent
      parameters:
        - in: query
          name: q
          type: string
        - in: query
          name: courseId
          type: string
        - in: query
          name: organizerId
          type: string
        - in: query
          name: profileId
          type: string
        - in: query
          name: destinationFlag
          type: boolean
        - in: query
          name: handsOnFlag
          type: boolean
        - in: query
          name: onlineFlag
          type: boolean
      responses:
        '200':
          description: Events
          schema:
            $ref: '#/definitions/EePagedEvent'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/events/{eventId}/permissions/{accountId}':
    parameters:
      - $ref: '#/parameters/eventId'
      - $ref: '#/parameters/accountId'
    get:
      tags:
        - eeEvents
      summary: Get permission for account
      operationId: getAccountPermissionForProfile
      responses:
        '200':
          description: Permissions for account
          schema:
            $ref: "#/definitions/EePermission"
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEvents
      summary: Set permission for profile
      operationId: setProfilePermission
      parameters:
        - in: body
          name: permissionProps
          description: Permissions
          required: true
          schema:
            $ref: '#/definitions/EePermissionInput'
      responses:
        '200':
          description: Permission set
          schema:
            $ref: '#/definitions/EePermission'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/permissions/{accountId}/check':
    parameters:
      - $ref: '#/parameters/eventId'
      - $ref: '#/parameters/accountId'
    get:
      tags:
        - eeEvents
      summary: Check account has permission
      operationId: checkAccountHasPermission
      parameters:
        - in: query
          type: string
          required: true
          name: permission
      responses:
        '200':
          description: Account has Permission
          schema:
            $ref: '#/definitions/EePermissionCheck'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/all-permissions':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEvents
      summary: List all profile permissions
      operationId: getProfilePermission
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: List of Users with permissions linked to this profile
          schema:
            $ref: '#/definitions/EePagedPermission'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  ### End of Events
  
  ### Event Tickets
  '/events/{eventId}/tickets':
    parameters:
      - $ref: '#/parameters/eventId'
    post:
      tags:
        - eeTickets
      summary: Add Ticket to event
      operationId: addEventTicket
      parameters:
        - in: body
          name: ticketProps
          description: Ticket to update
          required: true
          schema:
            $ref: '#/definitions/EeTicketUpdate'
      responses:
        '200':
          description: Event Course updated
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event or Profile not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    get:
      tags:
        - eeTickets
      summary: Get Ticket to event
      operationId: listEventTickets
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Event Tickets
          schema:
            $ref: '#/definitions/EePagedTicket'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/tickets/{ticketId}':
    parameters:
      - $ref: '#/parameters/ticketId'
    get:
      tags:
        - eeTickets
      summary: Get a ticket from the directory
      operationId: getTicket
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeTicket'
        '400':
          description: Invalid ID supplied
        '404':
          description: Ticket not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeTickets
      summary: Update an existing Event
      operationId: updateTicket
      parameters:
        - in: body
          name: ticketProps
          description: Ticket object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/EeTicketUpdate'
      responses:
        '200':
          description: Ticket updated
          schema:
            $ref: '#/definitions/EeTicket'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Ticket not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeTickets
      summary: Delete an existing Event
      operationId: deleteTicket
      responses:
        '204':
          description: Ticket deleted
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Ticket not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
parameters:
  limit:
    name: limit
    in: query
    description: Number of items returned
    type: integer
    format: int32
    minimum: 0
    exclusiveMinimum: true
    maximum: 50
    exclusiveMaximum: false
    multipleOf: 10
    default: 20
  cursor:
    name: cursor
    in: query
    description: Start Cursor for query
    type: string
  accountId:
    name: accountId
    in: path
    description: Account Id
    type: string
    required: true
  eventId:
    name: eventId
    in: path
    description: Event Id
    type: string
    required: true
  ticketId:
    name: ticketId
    in: path
    description: Ticket Id
    type: string
    required: true
responses:
  Default500ErrorResponse:
    description: An unexpected error occured.
    schema:
      $ref: '#/definitions/EeDefaultError'
  InvalidInputResponse:
    description: Validation exception
  UnauthorizedError:
    description: API key is missing or invalid
    headers:
      WWW_Authenticate:
        type: string
definitions:
  # Extendable Models
  EeBaseId:
    type: object
    properties:
      id:
        type: string
      created:
        type: integer
        format: int32
        readOnly: true
      modified:
        type: integer
        format: int32
        readOnly: true
      version:
        type: string
        readOnly: true
  
  EeCreator:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - properties:
          creatorId:
            type: string
            
  EePagination:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
      nextCursor:
        type: string
      total:
        type: integer
        format: int32
  ### End Extendable Models
  
  ### Components
  EeDefaultError:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  
  ### Permissions
  
  ### Permissions
  EePermission:
    type: object
    properties:
      id:
        type: string
      creatorId:
        type: string
      entityKind:
        type: string
      entityId:
        type: string
      permissions:
        type: object
  EePermissionInput:
    type: object
    properties:
      permissions:
        type: object
  EePagedPermission:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      allPermission:
        type: array
        items:
          type: string
      items:
        type: array
        items:
          $ref: '#/definitions/EePermission'
  EePermissionCheck:
    type: object
    properties:
      hasPermission:
        type: boolean
  ### End Permissions
  
  ### End Permissions
  EeProfile:
    type: object
    properties:
      id:
        type: string
      name: 
        type: string
      location:
        type: string
      profileType:
        type: string
      shortBio:
        type: string  

  ### Course
  EeCourse:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      picture:
        type: string
      shortBio:
        type: string
        
  EeEventCourse:
    type: object
    properties:
      courseId:
        type: string
      startTimestamp:
        type: integer
      endTimestamp:
        type: integer
      description:
        type: string

  ### Event
  EeEventUpdate:
    type: object
    properties:
      organizerId:
        type: string
      name:
        type: string
      shortBio:
        type: string
      bio:
        type: string
      picture:
        type: string
      pictures:
        type: array
        items:
          type: string
      onlineFlag:
        type: boolean
      handsOnFlag:
        type: boolean
      destinationFlag:
        type: boolean
      startTimestamp:
        type: integer
        format: int32
      endTimestamp:
        type: integer
        format: int32
      website:
        type: string
      tags:
        type: array
        items:
          type: string
      isLive:
        type: boolean
      isPublic:
        type: boolean
        
  EeEvent:
    type: object
    allOf:
      - $ref: '#/definitions/EeCreator'
      - $ref: '#/definitions/EeEventUpdate'
      - properties:
          profiles:
            type: array
            items:
              $ref: '#/definitions/EeProfile'
          profileRoles:
            type: object
          courses:
            type: array
            items:
              $ref: '#/definitions/EeCourse'
          eventCourses:
            type: array
            items:
              $ref: '#/definitions/EeEventCourse'
          
  EePagedEvent:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeEvent'
  ### End Event
  
  ### Ticket
  EeTicketUpdate:
    type: object
    properties:
      name:
        type: string
      isFree:
        type: boolean
      retailPrice:
        type: integer
        format: int32
      currency:
        type: string
      totalInventory:
        type: integer
        format: int32
      startSale:
        type: integer
        format: int32
      endSale:
        type: integer
        format: int32
      description:
        type: string
      shortDescription:
        type: string
      policy:
        type: string
      refundPolicy:
        type: string
      status:
        type: string
  
  EeTicket:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EeTicketUpdate'
      - properties:
          eventId:
            type: string
            
  EePagedTicket:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeTicket'
  ### End Event
