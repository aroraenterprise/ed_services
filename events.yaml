swagger: '2.0'
info:
  description: Events service for eDropin
  version: 1.0.0
  title: eDropin Events
  license:
    name: UNLICENSED
  contact:
    name: Saj Arora
    email: dev@edropin.com
host: events-dot-edropin-play.appspot.com
basePath: /
tags:
  - name: eeEvents
    description: Events
  - name: eeEventProfiles
    description: Profiles linked to events
  - name: eeEventCourses
    description: Courses linked to events
  - name: eeEventTickets
    description: Tickets linked to events
  - name: eeEventAttendees
    description: Event Attendees
schemes:
  - https
produces:
  - application/json
securityDefinitions:
  Authorization:
    type: apiKey
    in: header
    name: Authorization
  ClientKey:
    type: apiKey
    in: header
    name: X-Client-Key
security:
  - ClientKey: []
    Authorization: []
paths:
  /events:
    get:
      tags:
        - eeEvents
      summary: Get Events
      operationId: getAllEvents
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - in: query
          name: currencyCode
          description: Currency Code to fetch event primary tickets from the store for sale
          required: false
          type: string
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Events
          schema:
            $ref: '#/definitions/EePagedEvent'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eeEvents
      summary: Create Event
      operationId: createEvent
      parameters:
        - in: body
          name: eventProps
          description: Event object that needs to be created
          required: true
          schema:
            $ref: '#/definitions/EeEventUpdate'
      responses:
        '200':
          description: Event created
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/get-multi':
    get:
      tags:
        - eeEvents
      summary: Get Multiple Events
      operationId: getMultipleEvents
      parameters:
        - in: query
          name: eventIds
          type: array
          items:
            type: string
      responses:
        '200':
          description: Event
          schema:
            type: array
            items:
              $ref: '#/definitions/EeEvent'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEvents
      summary: Get a Event from the directory
      operationId: getEvent
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          description: Invalid ID supplied
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEvents
      summary: Update an existing Event
      operationId: updateEvent
      parameters:
        - in: body
          name: eventProps
          description: Event object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/EeEventUpdate'
      responses:
        '200':
          description: Event updated
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEvents
      summary: Delete an existing Event
      operationId: deleteEvent
      responses:
        '204':
          description: Event deleted
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/categories':
    get:
      tags:
        - eeEvents
      summary: Get Event Categories
      operationId: getEventCategories
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Categories
          schema:
            $ref: '#/definitions/EeFacetSearch'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/search':
    get:
      tags:
        - eeEvents
      summary: Search Events
      operationId: searchEvent
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Events
          schema:
            $ref: '#/definitions/EePagedEvent'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/permissions/{accountId}':
    parameters:
      - $ref: '#/parameters/eventId'
      - $ref: '#/parameters/accountId'
    get:
      tags:
        - eeEvents
      summary: Get permission for account
      operationId: getAccountPermissionForEvent
      responses:
        '200':
          description: Permissions for account
          schema:
            $ref: '#/definitions/EePermission'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEvents
      summary: Set permission for event
      operationId: setEventPermission
      parameters:
        - in: body
          name: permissionProps
          description: Permissions
          required: true
          schema:
            $ref: '#/definitions/EePermissionInput'
      responses:
        '200':
          description: Permission set
          schema:
            $ref: '#/definitions/EePermission'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/permissions/{accountId}/check':
    parameters:
      - $ref: '#/parameters/eventId'
      - $ref: '#/parameters/accountId'
    get:
      tags:
        - eeEvents
      summary: Check account has permission
      operationId: checkAccountHasPermission
      parameters:
        - in: query
          type: string
          required: true
          name: permission
      responses:
        '200':
          description: Account has Permission
          schema:
            $ref: '#/definitions/EePermissionCheck'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/all-permissions':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEvents
      summary: List all event permissions
      operationId: getEventPermission
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: List of Users with permissions linked to this event
          schema:
            $ref: '#/definitions/EePagedPermission'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/profiles':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventProfiles
      summary: Get Profiles linked to event
      operationId: listEventProfiles
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Event Profiles
          schema:
            $ref: '#/definitions/EePagedEventProfile'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/profiles/{profileId}':
    parameters:
      - $ref: '#/parameters/eventId'
      - $ref: '#/parameters/profileId'
    put:
      tags:
        - eeEventProfiles
      summary: Set profile role in event
      operationId: upsertEventProfile
      parameters:
        - in: body
          name: roleProp
          description: Profile role to update
          required: true
          schema:
            $ref: '#/definitions/EeEventProfileUpdate'
      responses:
        '200':
          description: Event Profile
          schema:
            $ref: '#/definitions/EeEventProfile'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEventProfiles
      summary: Remove profile role from event
      operationId: removeEventProfile
      responses:
        '200':
          description: Removed profile
          schema:
            $ref: '#/definitions/EeSuccess'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/courses':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventCourses
      summary: Get Courses linked to event
      operationId: listEventCourses
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Event Courses
          schema:
            $ref: '#/definitions/EePagedEventCourse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/courses/{courseId}':
    parameters:
      - $ref: '#/parameters/eventId'
      - $ref: '#/parameters/courseId'
    put:
      tags:
        - eeEventCourses
      summary: Set course in event
      operationId: upsertEventCourse
      parameters:
        - in: body
          name: courseProp
          description: Course to upsert
          required: true
          schema:
            $ref: '#/definitions/EeEventCourseUpdate'
      responses:
        '200':
          description: Event Course
          schema:
            $ref: '#/definitions/EeEventCourse'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEventCourses
      summary: Remove course role from event
      operationId: removeEventCourse
      responses:
        '200':
          description: Removed course
          schema:
            $ref: '#/definitions/EeSuccess'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/tickets':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventTickets
      summary: Get Tickets to event
      operationId: listEventTickets
      parameters:
        - $ref: '#/parameters/eventId'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Event Tickets
          schema:
            $ref: '#/definitions/EePagedTicket'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eeEventTickets
      summary: Add Ticket to event
      operationId: addEventTicket
      parameters:
        - in: body
          name: ticketProps
          description: Ticket to add
          required: true
          schema:
            $ref: '#/definitions/EeTicketUpdate'
        - in: query
          name: setAsEventPrice
          description: Make ticket price the event price
          required: false
          type: string
      responses:
        '200':
          description: Event Ticket added
          schema:
            $ref: '#/definitions/EeTicket'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/tickets/{ticketId}':
    parameters:
      - $ref: '#/parameters/ticketId'
    get:
      tags:
        - eeEventTickets
      summary: Get a ticket from the directory
      operationId: getEventTicket
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeTicket'
        '400':
          description: Invalid ID supplied
        '404':
          description: Ticket not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEventTickets
      summary: Upsert Ticket to event (One Ticket per currency)
      operationId: updateEventTicket
      parameters:
        - in: body
          name: ticketProps
          description: Ticket to update
          required: true
          schema:
            $ref: '#/definitions/EeTicketUpdate'
        - in: query
          name: setAsEventPrice
          description: Make ticket price the event price
          required: false
          type: string
      responses:
        '200':
          description: Event Ticket updated
          schema:
            $ref: '#/definitions/EeTicket'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event or Profile not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEventTickets
      summary: Delete an existing Event
      operationId: deleteEventTicket
      responses:
        '204':
          description: Ticket deleted
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Ticket not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/tickets/{ticketId}/set-primary/{currencyCode}':
    parameters:
      - $ref: '#/parameters/ticketId'
      - $ref: '#/parameters/currencyCode'
    put:
      tags:
        - eeEventTickets
      summary: Update an existing Event
      operationId: updateEventPrimaryTicket
      responses:
        '200':
          description: Event updated
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/attendees':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventAttendees
      summary: List all event attendees
      operationId: listAllAttendees
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Attendees for the event
          schema:
            $ref: '#/definitions/EePagedEventAttendee'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/tickets/{ticketId}/attendees':
    parameters:
      - $ref: '#/parameters/ticketId'
    post:
      tags:
        - eeEventAttendees
      summary: Add an Attendee to an event
      operationId: addAttendee
      parameters:
        - in: body
          name: attendeeProps
          description: Attendee object to be created
          required: true
          schema:
            $ref: '#/definitions/EeEventAttendeeUpdate'
      responses:
        '200':
          description: Attendee added
          schema:
            $ref: '#/definitions/EeEventAttendee'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/attendees/{attendeeId}':
    parameters:
      - $ref: '#/parameters/attendeeId'
    get:
      tags:
        - eeEventAttendees
      summary: Get an attendee
      operationId: getAttendee
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeEventAttendee'
        '400':
          description: Invalid ID supplied
        '404':
          description: Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEventAttendees
      summary: Update an attendee
      operationId: updateAttendee
      parameters:
        - in: body
          name: attendeeProps
          description: Attendee object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/EeEventAttendeeUpdate'
      responses:
        '200':
          description: Attendee updated
          schema:
            $ref: '#/definitions/EeEventAttendee'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Attendee not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEventAttendees
      summary: Delete an existing Event Attendee
      operationId: deleteEventAttendee
      responses:
        '204':
          description: Event Attendee deleted
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/attendees/ticketsale':
    post:
      tags:
        - eeEventAttendees
      security: []
      parameters:
        - in: query
          name: apiKey
          type: string
          required: true
        - in: body
          name: subData
          description: Base64 encoded message
          required: true
          schema:
            $ref: '#/definitions/EePubSubMessage'
      summary: Pub sub to generate claims for event tickets sold
      operationId: createAttendeesForTicketSale
      responses:
        '200':
          description: OK
          schema:
            type: string
        '400':
          description: Invalid ID supplied
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/attendees/claim':
    parameters:
      - in: query
        name: code
        type: string
        required: true
    get:
      tags:
        - eeEventAttendees
      summary: Get all attendee claims associated with the code in query
      operationId: getAttendeesByClaim
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/EeEventAttendee'
        '400':
          description: Invalid ID supplied
        '404':
          description: Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEventAttendees
      summary: Update attendees using claim code
      operationId: updateAttendeesByClaim
      parameters:
        - in: body
          name: attendeeProps
          description: Attendee objects that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/EeEventAttendeeClaimUpdate'
      responses:
        '200':
          description: Attendee updated
          schema:
            type: array
            items:
              $ref: '#/definitions/EeEventAttendee'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Attendee not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
parameters:
  limit:
    name: limit
    in: query
    description: Number of items returned
    type: integer
    format: int32
    minimum: 0
    exclusiveMinimum: true
    maximum: 50
    exclusiveMaximum: false
    multipleOf: 10
    default: 20
  cursor:
    name: cursor
    in: query
    description: Start Cursor for query
    type: string
  accountId:
    name: accountId
    in: path
    description: Account Id
    type: string
    required: true
  attendeeId:
    name: attendeeId
    in: path
    description: Attendee Id
    type: string
    required: true
  currencyCode:
    name: currencyCode
    in: path
    description: Currencey code
    type: string
    required: true
  eventId:
    name: eventId
    in: path
    description: Event Id
    type: string
    required: true
  profileId:
    name: profileId
    in: path
    description: Profile Id
    type: string
    required: true
  courseId:
    name: courseId
    in: path
    description: Course Id
    type: string
    required: true
  searchQuery:
    in: query
    name: q
    type: string
  searchFacets:
    in: query
    name: facets
    type: string
    description: 'e.g [profiledIds:edropin],[profileIds:agdontario]'
  ticketId:
    name: ticketId
    in: path
    description: Ticket Id
    type: string
    required: true
responses:
  Default500ErrorResponse:
    description: An unexpected error occured.
    schema:
      $ref: '#/definitions/EeDefaultError'
  InvalidInputResponse:
    description: Validation exception
  UnauthorizedError:
    description: API key is missing or invalid
    headers:
      WWW_Authenticate:
        type: string
definitions:
  EeBaseId:
    type: object
    properties:
      id:
        type: string
      createdOn:
        type: string
        readOnly: true
      modifiedOn:
        type: string
        readOnly: true
      version:
        type: string
        readOnly: true
  EePagination:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
      nextCursor:
        type: string
      total:
        type: integer
        format: int32
  EeDefaultError:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  EeAddress:
    type: object
    properties:
      formatted:
        type: string
      landmark:
        type: string
      street:
        type: string
      city:
        type: string
      state:
        type: string
      country:
        type: string
      zip:
        type: string
      _geoloc:
        $ref: '#/definitions/EeGeoloc'
  EeGeoloc:
    type: object
    properties:
      lat:
        type: number
        format: float
      lng:
        type: number
        format: float
  EePermission:
    type: object
    properties:
      id:
        type: string
      creatorId:
        type: string
      entityKind:
        type: string
      entityId:
        type: string
      permissions:
        type: object
  EePermissionInput:
    type: object
    properties:
      permissions:
        type: object
  EePagedPermission:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      allPermission:
        type: array
        items:
          type: string
      items:
        type: array
        items:
          $ref: '#/definitions/EePermission'
  EePermissionCheck:
    type: object
    properties:
      hasPermission:
        type: boolean
  EeSuccess:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: object
  EeProfile:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      location:
        type: string
      profileType:
        type: string
  EeCourse:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      picture:
        type: string
      organizerId:
        type: string
      organizerName:
        type: string
      bio:
        type: string
  EeEventUpdate:
    type: object
    required:
      - organizerId
      - name
      - startTimestamp
      - endTimestamp
      - timezone
      - agreeTerms
    properties:
      organizerId:
        type: string
      name:
        type: string
      startTimestamp:
        type: integer
        format: int32
      endTimestamp:
        type: integer
        format: int32
      timezone:
        type: string
      bio:
        type: string
      picture:
        type: string
      pictures:
        type: array
        items:
          type: string
      website:
        type: string
      isOnline:
        type: boolean
      isHandsOn:
        type: boolean
      isDestination:
        type: boolean
      destinationType:
        type: string
      isFree:
        type: boolean
      isLive:
        type: boolean
      isPublic:
        type: boolean
      duration:
        type: integer
        format: int32
      categories:
        type: array
        items:
          type: string
      address:
        $ref: '#/definitions/EeAddress'
      policy:
        type: string
      agreeTerms:
        type: string
        enum:
          - v1
  EeEvent:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EeEventUpdate'
      - properties:
          organizerName:
            type: string
          profileIds:
            type: array
            items:
              type: string
          courseIds:
            type: array
            items:
              type: string
          availableCurrencyCode:
            type: array
            items:
              type: string
          totalProfiles:
            type: integer
            format: int32
          totalTickets:
            type: integer
            format: int32
          totalTicketInventory:
            type: integer
            format: int32
          totalTicketSold:
            type: integer
            format: int32
          primaryTicket:
            type: object
            description: 'currencyCode: ticketId'
            additionalProperties:
              type: string
          tickets:
            type: array
            items:
              $ref: '#/definitions/EeTicketSummary'
  EeTicketSummary:
    type: object
    properties:
      id:
        type: string
      currencyCode:
        type: string
      price:
        type: integer
        format: int32
      memberships:
        type: array
        items:
          type: string
  EePagedEvent:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      facets:
        type: object
      items:
        type: array
        items:
          $ref: '#/definitions/EeEvent'
      storeItems:
        type: array
        items:
          $ref: '#/definitions/EeStoreItem'
  EeEventProfileUpdate:
    type: object
    properties:
      roles:
        type: array
        items:
          type: string
      isInvited:
        type: boolean
  EeEventProfile:
    type: object
    properties:
      profile:
        $ref: '#/definitions/EeProfile'
      roles:
        type: array
        items:
          type: string
      isInvited:
        type: boolean
      accepted:
        type: boolean
  EePagedEventProfile:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeEventProfile'
  EeEventCourseUpdate:
    type: object
    properties:
      offerings:
        type: array
        items:
          type: object
          properties:
            startTimestamp:
              type: integer
            endTimestamp:
              type: integer
            ticketId:
              type: string
            ticketName:
              type: string
  EeEventCourse:
    type: object
    properties:
      course:
        $ref: '#/definitions/EeCourse'
      offerings:
        type: array
        items:
          type: object
          properties:
            startTimestamp:
              type: integer
            endTimestamp:
              type: integer
            ticketId:
              type: string
            ticketName:
              type: string
  EePagedEventCourse:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeEventCourse'
  
  EeTicketUpdate:
    type: object
    required:
      - name
    allOf:
      - $ref: '#/definitions/EeStoreItemUpdate'
      - properties:
          name:
            type: string
          description:
            type: string
          
  EeStoreItemUpdate:
    type: object
    required:
      - name
      - totalInventory
      - priceStrategy
      - endSaleTimestamp
    properties:
      name:
        type: string
      picture:
        type: string
      description:
        type: string
      priceStrategy:
        type: "array"
        items:
          $ref: "#/definitions/EePriceStrategy"
      totalInventory:
        type: integer
        format: int32
      startSaleTimestamp:
        type: integer
      endSaleTimestamp:
        type: integer
      policy:
        type: string
      extra:
        type: object
      status:
        type: string
        enum:
          - open
          - closed
          - soldOut
  
  EeStoreItem:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EeStoreItemUpdate'
      - properties:
          merchantId:
            type: string
          merchantName:
            type: string
          totalSold:
            type: integer
            format: int32
          priceSummary:
            type: array
            items:
              $ref: '#/definitions/EePriceSummary'
  
  EePriceSummary:
    type: object
    properties:
      currencyCode:
        type: string
      price:
        type: integer
        format: int32
      discounts:
        type: array
        items:
          type: string
      membershipDiscounts:
        type: array
        items: 
          type: string
          
  EePriceStrategy:
    type: object
    required:
      - retailPrice
      - currencyCode
    properties:
      retailPrice:
        type: integer
        format: int32
      currencyCode:
        type: string
      discounts:
        type: array
        items:
          $ref: '#/definitions/EeDiscount'
      refunds:
        type: array
        items:
          $ref: '#/definitions/EeRefund'
      fees:
        type: object
        
  EeRefund:
    type: object
    required:
      - endTimestamp
      - refundAmount
    properties:
      startTimestamp:
        type: integer
      endTimestamp:
        type: integer
      refundDeduction:
        type: integer
    
  EeDiscount:
    type: object
    required:
      - discountType
      - discountPrice
      - endTimestamp
    properties:
      discountType:
        type: string
        enum:
          - limitedTime
          - referralCode
      referralCode:
        type: string
      discountPrice:
        type: integer
        format: int32
      startTimestamp:
        type: integer
        format: int32
      endTimestamp:
        type: integer
        format: int32
        
  EeTicket:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EeTicketUpdate'
      - properties:
          eventId:
            type: string
          eventName:
            type: string
          eventPicture:
            type: string
          organizerId:
            type: string
          organizerName:
            type: string
          totalSold:
            type: integer
            format: int32
  EePagedTicket:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeTicket'
  EeEventAttendeeUpdate:
    type: object
    required:
      - name
      - email
    properties:
      sendClaim:
        type: boolean
        default: false
      name:
        type: string
      email:
        type: string
      title:
        type: string
      phone:
        type: string
  EeEventAttendeeClaimUpdate:
    type: object
    properties:
      attendees:
        type: array
        items:
          type: object
          required:
            - id
            - name
            - email
          properties:
            id:
              type: string
            name:
              type: string
            email:
              type: string
            title:
              type: string
            phone:
              type: string
  EeEventAttendee:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EeEventAttendeeUpdate'
      - properties:
          orderItemId:
            type: string
          eventName:
            type: string
          eventId:
            type: string
          eventPicture:
            type: string
  EePagedEventAttendee:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeEventAttendee'
  EePubSubMessage:
    type: object
    properties:
      subscription:
        type: string
      message:
        type: object
        properties:
          data:
            type: string
          attributes:
            type: object
          message_id:
            type: string
  EeFacetSearch:
    type: object
    properties:
      facetHits:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
            highlighted:
              type: string
            count:
              type: integer
      exhaustiveFacetsCount:
        type: boolean
      processingTimeMS:
        type: integer