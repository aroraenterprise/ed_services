swagger: '2.0'
info:
  description: Events service for eDropin
  version: 1.0.8
  title: eDropin Events
  license:
    name: UNLICENSED
  contact:
    name: Saj Arora
    email: dev@edropin.com
host: events-dot-edropin-play.appspot.com
basePath: /
tags:
  - name: eeEvents
    description: Events
  - name: eeEventTags
    description: Tagging profiles and invites in an event
  - name: eeEventTickets
    description: Tickets linked to events
  - name: eeEventAttendees
    description: Event Attendees
  - name: eeEventDropins
    description: Event Dropins
  - name: eeCertificates
    description: Manage eCertificates - creation, update and deletion of templates
  - name: eeAttendeeCertificates
    description: Manage eCertificates for attendees-assignment and removal
  - name: eeKiosk
    description: Self-serve kiosks
schemes:
  - https
produces:
  - application/json
securityDefinitions:
  Authorization:
    type: apiKey
    in: header
    name: Authorization
  ClientKey:
    type: apiKey
    in: header
    name: X-Client-Key
security:
  - ClientKey: []
    Authorization: []
paths:
  /events:
    get:
      tags:
        - eeEvents
      summary: Get Events
      operationId: getAllEvents
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/searchCoords'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Events
          schema:
            $ref: '#/definitions/EePagedEvent'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eeEvents
      summary: Create Event
      operationId: createEvent
      parameters:
        - in: body
          name: eventProps
          description: Event object that needs to be created
          required: true
          schema:
            $ref: '#/definitions/EeEventUpdate'
      responses:
        '200':
          description: Event created
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/get-multi':
    get:
      tags:
        - eeEvents
      summary: Get Multiple Events
      operationId: getMultipleEvents
      parameters:
        - in: query
          name: eventIds
          type: array
          items:
            type: string
      responses:
        '200':
          description: Event
          schema:
            type: array
            items:
              $ref: '#/definitions/EeEvent'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEvents
      summary: Get a Event from the directory
      operationId: getEvent
      parameters:
        - in: query
          name: currencyCode
          description: Currency Code to fetch event primary tickets from the store for sale
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          description: Invalid ID supplied
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEvents
      summary: Update an existing Event
      operationId: updateEvent
      parameters:
        - in: body
          name: eventProps
          description: Event object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/EeEventUpdate'
      responses:
        '200':
          description: Event updated
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEvents
      summary: Delete an existing Event
      operationId: deleteEvent
      responses:
        '204':
          description: Event deleted
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/categories':
    get:
      tags:
        - eeEvents
      summary: Get Event Categories
      operationId: getEventCategories
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Categories
          schema:
            $ref: '#/definitions/EeFacetSearch'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/search':
    get:
      tags:
        - eeEvents
      summary: Search Events
      operationId: searchEvent
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/searchCoords'
        - in: query
          name: currencyCode
          description: Currency Code to fetch event primary tickets from the store for sale
          required: false
          type: string
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Events
          schema:
            $ref: '#/definitions/EePagedEvent'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/permissions/{accountId}':
    parameters:
      - $ref: '#/parameters/eventId'
      - $ref: '#/parameters/accountId'
    get:
      tags:
        - eeEvents
      summary: Get permission for account
      operationId: getAccountPermissionForEvent
      responses:
        '200':
          description: Permissions for account
          schema:
            $ref: '#/definitions/EePermission'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEvents
      summary: Set permission for event
      operationId: setEventPermission
      parameters:
        - in: body
          name: permissionProps
          description: Permissions
          required: true
          schema:
            $ref: '#/definitions/EePermissionInput'
      responses:
        '200':
          description: Permission set
          schema:
            $ref: '#/definitions/EePermission'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/permissions/{accountId}/check':
    parameters:
      - $ref: '#/parameters/eventId'
      - $ref: '#/parameters/accountId'
    get:
      tags:
        - eeEvents
      summary: Check account has permission
      operationId: checkAccountHasPermission
      parameters:
        - in: query
          type: string
          required: true
          name: permission
      responses:
        '200':
          description: Account has Permission
          schema:
            $ref: '#/definitions/EePermissionCheck'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/all-permissions':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEvents
      summary: List all event permissions
      operationId: getEventPermission
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: List of Users with permissions linked to this event
          schema:
            $ref: '#/definitions/EePagedPermission'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/events/{eventId}/tags':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventTags
      summary: Paginate tags linked to an event
      operationId: listEventTags
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Event Profiles
          schema:
            $ref: '#/definitions/EePagedEventTag'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/tags-search':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventTags
      summary: Paginate tags linked to an event
      operationId: searchTagsForEvent
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Event Profiles
          schema:
            $ref: '#/definitions/EePagedEventTag'
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/tags/{profileId}':
    parameters:
      - $ref: '#/parameters/eventId'
      - $ref: '#/parameters/profileId'
    put:
      tags:
        - eeEventTags
      summary: Create or update a tag in an event [will make tag request if new tag]
      operationId: upsertEventTag
      parameters:
        - in: body
          name: roleProp
          description: Profile role to update
          required: true
          schema:
            $ref: '#/definitions/EeEventTagUpsert'
      responses:
        '200':
          description: Event Profile
          schema:
            $ref: '#/definitions/EeEventTag'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/event-tags/{tagId}':
    parameters:
      - $ref: '#/parameters/tagId'
    delete:
      tags:
        - eeEventTags
      summary: Remove tag from event
      operationId: removeEventTag
      responses:
        '200':
          description: Removed profile
          schema:
            $ref: '#/definitions/EeSuccess'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/eventTagStatusUpdate':
    post:
      tags:
        - eeEventTags
      security: []
      parameters:
        - in: query
          name: apiKey
          type: string
          required: true
        - in: body
          name: subData
          description: Base64 encoded message
          required: true
          schema:
            $ref: '#/definitions/EePubSubMessage'
      summary: Pub sub to update event tag, accept or decline [used by service account]
      operationId: updateEventTagStatus
      responses:
        '200':
          description: OK
          schema:
            type: string
        '400':
          description: Invalid ID supplied
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/events/{eventId}/tickets':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventTickets
      summary: Get Tickets to event
      operationId: listEventTickets
      parameters:
        - $ref: '#/parameters/eventId'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Event Tickets
          schema:
            $ref: '#/definitions/EePagedTicket'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eeEventTickets
      summary: Add Ticket to event
      operationId: addEventTicket
      parameters:
        - in: body
          name: ticketProps
          description: Ticket to add
          required: true
          schema:
            $ref: '#/definitions/EeTicketUpdate'
        - in: query
          name: setAsEventPrice
          description: Make ticket price the event price
          required: false
          type: string
      responses:
        '200':
          description: Event Ticket added
          schema:
            $ref: '#/definitions/EeTicket'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/tickets/{ticketId}':
    parameters:
      - $ref: '#/parameters/ticketId'
    get:
      tags:
        - eeEventTickets
      summary: Get a ticket from the directory
      operationId: getEventTicket
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeTicket'
        '400':
          description: Invalid ID supplied
        '404':
          description: Ticket not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEventTickets
      summary: Upsert Ticket to event (One Ticket per currency)
      operationId: updateEventTicket
      parameters:
        - in: body
          name: ticketProps
          description: Ticket to update
          required: true
          schema:
            $ref: '#/definitions/EeTicketUpdate'
        - in: query
          name: setAsEventPrice
          description: Make ticket price the event price
          required: false
          type: string
      responses:
        '200':
          description: Event Ticket updated
          schema:
            $ref: '#/definitions/EeTicket'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event or Profile not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEventTickets
      summary: Delete an existing Event
      operationId: deleteEventTicket
      responses:
        '204':
          description: Ticket deleted
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Ticket not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/tickets/{ticketId}/set-primary/{currencyCode}':
    parameters:
      - $ref: '#/parameters/ticketId'
      - $ref: '#/parameters/currencyCode'
    put:
      tags:
        - eeEventTickets
      summary: Update an existing Event
      operationId: updateEventPrimaryTicket
      responses:
        '200':
          description: Event updated
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/events/{eventId}/dropins':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventDropins
      summary: List all event dropins
      operationId: listAllEventDropins
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Attendees for the event
          schema:
            $ref: '#/definitions/EePagedEventDropin'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eeEventDropins
      summary: Add a dropin to an event
      operationId: addEventDropin
      parameters:
        - in: body
          name: dropinProps
          description: Dropin object to be created
          required: true
          schema:
            $ref: '#/definitions/EeEventDropinUpdate'
      responses:
        '200':
          description: Attendee added
          schema:
            $ref: '#/definitions/EeEventDropin'
        '400':
          description: Invalid request
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/dropins/{dropinId}':
    parameters:
      - $ref: '#/parameters/dropinId'
    get:
      tags:
        - eeEventDropins
      summary: Get a dropin
      operationId: getEventDropin
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeEventDropin'
        '404':
          description: Dropin not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEventDropins
      summary: Update dropin to event
      operationId: updateEventDropin
      parameters:
        - in: body
          name: dropinProps
          description: Ticket to update
          required: true
          schema:
            $ref: '#/definitions/EeEventDropinUpdate'
      responses:
        '200':
          description: Event Dropin updated
          schema:
            $ref: '#/definitions/EeEventDropin'
        '404':
          description: Dropin not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEventDropins
      summary: Delete an existing dropin
      operationId: deleteEventDropin
      responses:
        '204':
          description: Dropin deleted
          schema:
            $ref: '#/definitions/EeSuccess'
        '404':
          description: Dropin not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/dropins/{dropinId}/attendees':
    parameters:
      - $ref: '#/parameters/dropinId'
      - in: query
        name: isAssigned
        type: boolean
        description: If set will only give back attendees that have been assigned to this dropin otherwise gives back all possible attendees that can be assigned this dropin
    get:
      tags:
        - eeEventDropins
      summary: List all attendees assigned to this dropin
      operationId: searchAttendeesAssignedToDropin
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Paged list of attendees assigned to a dropin
          schema:
            $ref: '#/definitions/EePagedEventAttendee'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/dropins/{dropinId}/attendees/{attendeeId}':
    parameters:
      - $ref: '#/parameters/dropinId'
      - $ref: '#/parameters/attendeeId'
    put:
      tags:
        - eeEventDropins
      summary: Assign a dropin to attendee
      operationId: assignDropinToAttendee
      responses:
        '200':
          description: Dropin assigned
          schema:
            $ref: '#/definitions/EeEventAttendee'
        '404':
          description: Dropin not found
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEventDropins
      summary: Remove an assigned dropin from attendee
      operationId: removeDropinFromAttendee
      responses:
        '204':
          description: Dropin removed
          schema:
            $ref: '#/definitions/EeSuccess'
        '404':
          description: Dropin not found
  '/tickets/{ticketId}/dropins':
    parameters:
      - $ref: '#/parameters/ticketId'
      - $ref: '#/parameters/searchQuery'
      - $ref: '#/parameters/searchFacets'
      - $ref: '#/parameters/cursor'
      - $ref: '#/parameters/limit'
    get:
      tags:
        - eeEventDropins
      summary: List all dropins assigned to this ticket
      operationId: searchDropinsAssignedToTicket
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EePagedEventDropin'
        '404':
          description: Dropin not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
        
  
  '/tickets/{ticketId}/dropins/{dropinId}':
    parameters:
      - $ref: '#/parameters/ticketId'
      - $ref: '#/parameters/dropinId'
    put:
      tags:
        - eeEventDropins
      summary: Add dropin to ticket
      operationId: addDropinToEventTicket
      responses:
        '200':
          description: Event Ticket updated
          schema:
            type: object
            properties:
              dropin:
                $ref: '#/definitions/EeEventDropin'
              ticket:
                $ref: '#/definitions/EeTicket'
        '404':
          description: Dropin or Ticket not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEventDropins
      summary: Remove dropin from ticket
      operationId: removeDropinFromTicket
      responses:
        '204':
          description: Dropin removed
          schema:
            type: object
            properties:
              dropin:
                $ref: '#/definitions/EeEventDropin'
              ticket:
                $ref: '#/definitions/EeTicket'
        '404':
          description: Dropin or Ticket not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/events/{eventId}/attendees':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventAttendees
      summary: List all event attendees
      operationId: listAllAttendees
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Attendees for the event
          schema:
            $ref: '#/definitions/EePagedEventAttendee'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/events/{eventId}/attendees/export':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventAttendees
      summary: List all event attendees
      operationId: exportAttendees
      parameters:
        - $ref: '#/parameters/searchFacets'
      responses:
        '200':
          description: Export attendees for the event as a csv
          schema:
            $ref: '#/definitions/EeCsv'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
          
  '/tickets/{ticketId}/attendees':
    parameters:
      - $ref: '#/parameters/ticketId'
    post:
      tags:
        - eeEventAttendees
      summary: Add an Attendee to an event
      operationId: addAttendee
      parameters:
        - in: body
          name: attendeeProps
          description: Attendee object to be created
          required: true
          schema:
            $ref: '#/definitions/EeEventAttendeeUpdate'
      responses:
        '200':
          description: Attendee added
          schema:
            $ref: '#/definitions/EeEventAttendee'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/attendees':
    get:
      tags:
        - eeEventAttendees
      summary: Search user attendees
      operationId: listUserAttendees
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Get attendees for user
          schema:
            $ref: '#/definitions/EePagedEventAttendee'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/attendees/{attendeeId}':
    parameters:
      - $ref: '#/parameters/attendeeId'
    get:
      tags:
        - eeEventAttendees
      summary: Get an attendee
      operationId: getAttendee
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeEventAttendee'
        '400':
          description: Invalid ID supplied
        '404':
          description: Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEventAttendees
      summary: Update an attendee
      operationId: updateAttendee
      parameters:
        - in: body
          name: attendeeProps
          description: Attendee object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/EeEventAttendeeUpdate'
      responses:
        '200':
          description: Attendee updated
          schema:
            $ref: '#/definitions/EeEventAttendee'
        '400':
          description: Invalid ID supplied
        '404':
          description: Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEventAttendees
      summary: Delete an existing Event Attendee
      operationId: deleteEventAttendee
      responses:
        '204':
          description: Event Attendee deleted
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/attendees/{attendeeId}/claims':
    parameters:
      - $ref: '#/parameters/attendeeId'
    get:
      tags:
        - eeEventAttendees
      summary: Get an attendee claim
      operationId: getAttendeeClaimLink
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              link:
                type: string
        '404':
          description: Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eeEventAttendees
      summary: Send Claim email
      operationId: sendAttendeeClaimEmail
      parameters:
        - in: body
          name: claimProps
          description: Claim properties to send link
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
      responses:
        '200':
          description: Claim sent
          schema:
            $ref: '#/definitions/EeSuccess'
        '404':
          description: Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/attendees/clear-dropins':
    post:
      tags:
        - eeEventAttendees
      summary: Clear dropins from attendees
      operationId: clearAttendeeDropins
      parameters:
        - in: body
          name: attendeeIds
          description: Attendee Ids
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Attendees updated
          schema:
            $ref: '#/definitions/EePagedEventAttendee'
        '404':
          description: Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/attendees/message':
    post:
      tags:
        - eeEventAttendees
      summary: Send a message to attendees
      operationId: sendAttendeeNotification
      parameters:
        - in: body
          name: attendeeNotificationProp
          description: Attendee Notification properties
          required: true
          schema:
            $ref: '#/definitions/EeAttendeeNotification'
      responses:
        '200':
          description: Notification sent
          schema:
            $ref: '#/definitions/EeSuccess'
        '404':
          description: Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/attendees/transfer':
    post:
      tags:
        - eeEventAttendees
      summary: Send Claim email
      operationId: transferAttendees
      parameters:
        - in: body
          name: transferProps
          description: Attendee transfer properties
          required: true
          schema:
            $ref: '#/definitions/EeEventAttendeeTransfer'
      responses:
        '200':
          description: Attendees transfered
          schema:
            $ref: '#/definitions/EePagedEventAttendee'
        '404':
          description: Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/attendees/ticketsale':
    post:
      tags:
        - eeEventAttendees
      security: []
      parameters:
        - in: query
          name: apiKey
          type: string
          required: true
        - in: body
          name: subData
          description: Base64 encoded message
          required: true
          schema:
            $ref: '#/definitions/EePubSubMessage'
      summary: Pub sub to generate claims for event tickets sold
      operationId: createAttendeesForTicketSale
      responses:
        '200':
          description: OK
          schema:
            type: string
        '400':
          description: Invalid ID supplied
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/attendees/ticketrefund':
    post:
      tags:
        - eeEventAttendees
      security: []
      parameters:
        - in: query
          name: apiKey
          type: string
          required: true
        - in: body
          name: subData
          description: Base64 encoded message
          required: true
          schema:
            $ref: '#/definitions/EePubSubMessage'
      summary: Pub sub to cancel tickets for refunded order items
      operationId: deactivateAttendeesForTicketRefund
      responses:
        '200':
          description: OK
          schema:
            type: string
        '400':
          description: Invalid ID supplied
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/attendees/claim':
    parameters:
      - in: query
        name: code
        type: string
        required: true
    get:
      tags:
        - eeEventAttendees
      summary: Get all attendee claims associated with the code in query
      operationId: getAttendeesByClaim
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EePagedEventAttendee'
        '400':
          description: Invalid ID supplied
        '404':
          description: Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEventAttendees
      summary: Update attendees using claim code
      operationId: updateAttendeesByClaim
      parameters:
        - in: body
          name: attendeeProps
          description: Attendee objects that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/EeEventAttendeeClaimUpdate'
      responses:
        '200':
          description: Attendee updated
          schema:
            $ref: '#/definitions/EePagedEventAttendee'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Attendee not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  /certificates:
    get:
      tags:
        - eeCertificates
      summary: List Certificates
      operationId: listCertificates
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Paged list of certificates
          schema:
            $ref: '#/definitions/EePagedCertificate'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eeCertificates
      summary: Create a Certificate
      operationId: createCertificate
      parameters:
        - in: body
          name: eventProps
          description: Event object that needs to be created
          required: true
          schema:
            $ref: '#/definitions/EeCertificateUpdate'
      responses:
        '200':
          description: Certificate created
          schema:
            $ref: '#/definitions/EeCertificate'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/certificates/{certificateId}':
    parameters:
      - $ref: '#/parameters/certificateId'
    get:
      tags:
        - eeCertificates
      summary: Get a certificate by id
      operationId: getCertificate
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeEvent'
        '404':
          description: Certificate not found
    put:
      tags:
        - eeCertificates
      summary: Update a certificate
      operationId: updateCertificate
      parameters:
        - in: body
          name: certificateProps
          description: Certificate with updated props
          required: true
          schema:
            $ref: '#/definitions/EeCertificateUpdate'
      responses:
        '200':
          description: Certificate updated
          schema:
            $ref: '#/definitions/EeCertificate'
        '404':
          description: Certificate not found
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeCertificates
      summary: Delete a certificate by id
      operationId: deleteCertificate
      responses:
        '204':
          description: Certificate deleted
        '404':
          description: Certificate not found
  '/attendees/{attendeeId}/certificates':
    parameters:
      - $ref: '#/parameters/attendeeId'
    get:
      tags:
        - eeAttendeeCertificates
      summary: List attendee certificates
      operationId: listAttendeeCertificates
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Paged list of certificates assigned to an attendee
          schema:
            $ref: '#/definitions/EePagedCertificate'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/attendees/{attendeeId}/certificates/{certificateId}':
    parameters:
      - $ref: '#/parameters/attendeeId'
      - $ref: '#/parameters/certificateId'
    get:
      tags:
        - eeAttendeeCertificates
      summary: Get a certificate by id
      operationId: getAttendeeCertificate
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeAttendeeCertificate'
        '404':
          description: Certificate not found
    put:
      tags:
        - eeAttendeeCertificates
      summary: Assign a certificate
      operationId: assignAttendeeCertificate
      responses:
        '200':
          description: Certificate assigned
          schema:
            $ref: '#/definitions/EeAttendeeCertificate'
        '404':
          description: Certificate not found
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeAttendeeCertificates
      summary: Remove an assigned certificate for attendee
      operationId: removeAttendeeCertificate
      responses:
        '204':
          description: Certificate removed
        '404':
          description: Certificate not assigned
  /kiosks:
    get:
      tags:
        - eeKiosk
      summary: List all user's kiosks
      operationId: listAllKiosks
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Paged list of kiosks
          schema:
            $ref: '#/definitions/EePagedKiosk'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eeKiosk
      summary: Activate kiosk [used by kiosk to get its unique id]
      operationId: activateKiosk
      responses:
        '200':
          description: Kiosk created
          schema:
            $ref: '#/definitions/EeKiosk'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/kiosks/{kioskId}':
    parameters:
      - $ref: '#/parameters/kioskId'
    get:
      tags:
        - eeKiosk
      summary: Get a kiosk
      operationId: getKiosk
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeKiosk'
        '404':
          description: Kiosk not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeKiosk
      summary: Link a kiosk to my account
      operationId: linkKiosk
      parameters:
        - in: body
          name: kioskProps
          description: Kiosk object that needs to be linked
          required: true
          schema:
            $ref: '#/definitions/EeKioskUpdate'
      responses:
        '200':
          description: Kiosk linked
          schema:
            $ref: '#/definitions/EeKiosk'
        '404':
          description: Kiosk not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeKiosk
      summary: Deactivate a kiosk
      operationId: deactivateKiosk
      responses:
        '204':
          description: Kiosk cleared
          schema:
            $ref: '#/definitions/EeSuccess'
        '404':
          description: Kiosk not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
parameters:
  limit:
    name: limit
    in: query
    description: Number of items returned
    type: integer
    format: int32
    minimum: 0
    exclusiveMinimum: true
    maximum: 50
    exclusiveMaximum: false
    multipleOf: 10
    default: 20
  cursor:
    name: cursor
    in: query
    description: Start Cursor for query
    type: string
  accountId:
    name: accountId
    in: path
    description: Account Id
    type: string
    required: true
  attendeeId:
    name: attendeeId
    in: path
    description: Attendee Id
    type: string
    required: true
  certificateId:
    name: certificateId
    in: path
    description: Certificate Id
    type: string
    required: true
  currencyCode:
    name: currencyCode
    in: path
    description: Currencey code
    type: string
    required: true
  dropinId:
    name: dropinId
    in: path
    description: Dropin Id
    type: string
    required: true
  eventId:
    name: eventId
    in: path
    description: Event Id
    type: string
    required: true
  profileId:
    name: profileId
    in: path
    description: Profile Id
    type: string
    required: true
  courseId:
    name: courseId
    in: path
    description: Course Id
    type: string
    required: true
  inviteId:
    name: inviteId
    in: path
    description: Invite Id
    type: string
    required: true
  kioskId:
    name: kioskId
    in: path
    description: Kiosk Id
    type: string
    required: true
  searchQuery:
    in: query
    name: q
    type: string
  searchCoords:
    in: query
    name: searchCoords
    description: Coordinates for search
    type: array
    required: false
    items:
      type: string
  searchFacets:
    in: query
    name: facets
    type: string
    description: 'e.g [profiledIds:edropin],[profileIds:agdontario]'
  tagId:
    name: tagId
    in: path
    description: Tag Id
    type: string
    required: true
  ticketId:
    name: ticketId
    in: path
    description: Ticket Id
    type: string
    required: true
responses:
  Default500ErrorResponse:
    description: An unexpected error occured.
    schema:
      $ref: '#/definitions/EeDefaultError'
  InvalidInputResponse:
    description: Validation exception
  UnauthorizedError:
    description: API key is missing or invalid
    headers:
      WWW_Authenticate:
        type: string
definitions:
  EeBaseId:
    type: object
    properties:
      id:
        type: string
      createdOn:
        type: string
        readOnly: true
      modifiedOn:
        type: string
        readOnly: true
      version:
        type: string
        readOnly: true
  EePagination:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
      nextCursor:
        type: string
      total:
        type: integer
        format: int32
  EeDefaultError:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  EeAddress:
    type: object
    properties:
      formatted:
        type: string
      landmark:
        type: string
      street:
        type: string
      city:
        type: string
      state:
        type: string
      country:
        type: string
      zip:
        type: string
      _geoloc:
        $ref: '#/definitions/EeGeoloc'
  EeGeoloc:
    type: object
    properties:
      lat:
        type: number
        format: float
      lng:
        type: number
        format: float
  EePermission:
    type: object
    properties:
      id:
        type: string
      creatorId:
        type: string
      entityKind:
        type: string
      entityId:
        type: string
      permissions:
        type: object
  EePermissionInput:
    type: object
    properties:
      permissions:
        type: object
  EePagedPermission:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      allPermission:
        type: array
        items:
          type: string
      items:
        type: array
        items:
          $ref: '#/definitions/EePermission'
  EePermissionCheck:
    type: object
    properties:
      hasPermission:
        type: boolean
  EeSuccess:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: object
  EeProfile:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      location:
        type: string
      profileType:
        type: string
      bio:
        type: string
      picture:
        type: string
      tagId:
        type: string
      isInvited:
        type: boolean

  EeEventUpdate:
    type: object
    required:
      - organizerId
      - name
      - startTimestamp
      - endTimestamp
      - agreeTerms
    properties:
      organizerId:
        type: string
      name:
        type: string
      startTimestamp:
        type: integer
        format: int32
      endTimestamp:
        type: integer
        format: int32
      timezone:
        type: string
      bio:
        type: string
      picture:
        type: string
      pictures:
        type: array
        items:
          type: string
      website:
        type: string
      isOnline:
        type: boolean
      isHandsOn:
        type: boolean
      isDestination:
        type: boolean
      destinationType:
        type: string
      isFree:
        type: boolean
      isLive:
        type: boolean
      isPublic:
        type: boolean
      duration:
        type: integer
        format: int32
      categories:
        type: array
        items:
          type: string
      address:
        $ref: '#/definitions/EeAddress'
      policy:
        type: string
      agreeTerms:
        type: string
        enum:
          - v1
  EeEvent:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EeEventUpdate'
      - properties:
          organizerName:
            type: string
          profiles:
            type: array
            items:
              type: string
          courseIds:
            type: array
            items:
              type: string
          availableCurrencyCode:
            type: array
            items:
              type: string
          totalProfiles:
            type: integer
            format: int32
          totalTickets:
            type: integer
            format: int32
          totalTicketInventory:
            type: integer
            format: int32
          totalTicketSold:
            type: integer
            format: int32
          primaryTicket:
            type: object
            description: 'currencyCode: ticketId'
            additionalProperties:
              type: string
          tickets:
            type: array
            items:
              $ref: '#/definitions/EeTicketSummary'
          
  EePagedEvent:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      facets:
        type: object
      items:
        type: array
        items:
          $ref: '#/definitions/EeEvent'
      storeItems:
        type: array
        items:
          $ref: '#/definitions/EeStoreItem'
  
  EeEventTagUpsert:
    type: object
    properties:
      roles:
        type: array
        items:
          type: string
        default: []
      isInvited:
        type: boolean
        default: false
      
  EeEventTag:
    type: object
    properties:
      id:
        type: string
      roles:
        type: array
        items:
          type: string
      profileId:
        type: string
      taggedById:
        type: string
      taggedByName:
        type: string
      eventId:
        type: string
      isInvited:
        type: boolean
      referralCode:
        type: string
      acceptedWhen:
        type: number
      declinedWhen:
        type: number
            
  EePagedEventTag:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeEventTag'
      profiles:
        type: array
        items:
          $ref: '#/definitions/EeProfile'
  
  EeTicketUpdate:
    type: object
    required:
      - name
    allOf:
      - $ref: '#/definitions/EeStoreItemUpdate'
      - properties:
          name:
            type: string
          description:
            type: string
  
  EeStoreItemUpdate:
    type: object
    required:
      - name
      - totalInventory
      - priceStrategy
      - startSaleTimestamp
      - endSaleTimestamp
    properties:
      itemType:
        type: string
      name:
        type: string
      picture:
        type: string
      description:
        type: string
      priceStrategy:
        type: "array"
        items:
          $ref: "#/definitions/EePriceStrategy"
      totalInventory:
        type: integer
        format: int32
      startSaleTimestamp:
        type: integer
      endSaleTimestamp:
        type: integer
      policy:
        type: string
      extra:
        type: object
      status:
        type: string
        enum:
          - open
          - closed
          - soldOut
  EeStoreItem:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EeStoreItemUpdate'
      - properties:
          merchantId:
            type: string
          merchantName:
            type: string
          totalSold:
            type: integer
            format: int32
          priceSummary:
            type: array
            items:
              $ref: '#/definitions/EePriceSummary'
              
  EePriceStrategy:
    type: object
    required:
      - retailPrice
      - currencyCode
    properties:
      retailPrice:
        type: integer
        format: int32
      currencyCode:
        type: string
      discounts:
        type: array
        items:
          $ref: '#/definitions/EeDiscount'
      refundPolicies:
        type: array
        items:
          $ref: '#/definitions/EeRefundPolicy'

  
  EeDiscount:
    type: object
    required:
      - discountType
      - discountPrice
      - startTimestamp
      - endTimestamp
    properties:
      discountType:
        type: string
        enum:
          - membership
          - referralCode
      referralCode:
        type: string
      discountPrice:
        type: integer
        format: int32
      startTimestamp:
        type: integer
        format: int32
      endTimestamp:
        type: integer
        format: int32
      membershipId:
        type: integer
      membershipName:
        type: string
        
  EeRefundPolicy:
    type: object
    required:
      - startTimestamp
      - endTimestamp
      - feeAmount
    properties:
      policyId:
        type: string
      policyName:
        type: string
      disclaimer:
        type: string
      appFeeRefundAmount: 
        type: number
      platformFee:
        type: number
      startTimestamp:
        type: integer
      endTimestamp:
        type: integer
      feeAmount:
        type: integer
      refundAmount:
        type: integer
      isDifferenceCharged:
        type: boolean
        default: false
          
  EePriceSummary:
    type: object
    properties:
      currencyCode:
        type: string
      retailPrice:
        type: integer
        format: int32
      adDiscounts:
        type: array
        items:
          $ref: '#/definitions/EeDiscount'
      refundPolicies:
        type: array
        items:
          $ref: '#/definitions/EeRefundPolicy'
          
  
  EeTicketSummary:
    type: object
    allOf:
      - $ref: '#/definitions/EePriceSummary'
      - properties:
          id:
            type: string
            description: 'storeItemId'
          name:
            type: string
          uid:
            type: string
            description: 'storeItemId-currencyCode'
          
  
  EeTicket:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EeTicketUpdate'
      - $ref: '#/definitions/EeStoreItem'
      - properties:
          eventId:
            type: string
          eventName:
            type: string
          eventPicture:
            type: string
          organizerId:
            type: string
          organizerName:
            type: string
          totalSold:
            type: integer
            format: int32
          dropins:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                dropinType:
                  type: string
                color:
                  type: string

  EePagedTicket:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeTicket'

  EeEventAttendeeUpdate:
    type: object
    required:
      - name
      - email
    properties:
      sendClaim:
        type: boolean
        default: false
      name:
        type: string
      email:
        type: string
      title:
        type: string
      phone:
        type: string
      memberId:
        type: string
  EeEventAttendeeClaimUpdate:
    type: object
    properties:
      attendees:
        type: array
        items:
          type: object
          required:
            - id
            - name
            - email
          properties:
            id:
              type: string
            name:
              type: string
            email:
              type: string
            title:
              type: string
            phone:
              type: string
            memberId:
              type: string
  EeEventAttendee:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EeEventAttendeeUpdate'
      - properties:
          orderItemId:
            type: string
          orderItemStatusId:
            type: string
          eventName:
            type: string
          eventId:
            type: string
          ticketId:
            type: string
          ticketName:
            type: string
          eventPicture:
            type: string
          active:
            type: boolean
          isRefunded:
            type: boolean
          isClaimed:
            type: boolean
          appliedPromotion:
            $ref: '#/definitions/EeAppliedPromotion'
          dropins:
            type: array
            items:
              $ref: '#/definitions/EeEventDropin'
  EePagedEventAttendee:
    type: object
    properties:
      facets:
        type: object
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeEventAttendee'
      events:
        type: array
        items:
          $ref: '#/definitions/EeEvent'
  
  EeAppliedPromotion:
    type: object
    properties:
      discountType:
        type: string
      discountPrice:
        type: integer
      timestamp:
        type: integer
      referralCode:
        type: string
      membershipId:
        type: integer
      membershipName:
        type: string
      memberId:
        type: string
        
  EePubSubMessage:
    type: object
    properties:
      subscription:
        type: string
      message:
        type: object
        properties:
          data:
            type: string
          attributes:
            type: object
          message_id:
            type: string
  EeFacetSearch:
    type: object
    properties:
      facetHits:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
            highlighted:
              type: string
            count:
              type: integer
      exhaustiveFacetsCount:
        type: boolean
      processingTimeMS:
        type: integer
  EeCsv:
    type: object
    properties:
      csv:
        type: string
      filename:
        type: string
        
  EeCertificateUpdate:
    type: object
    required:
      - name
    properties:
      name:
        type: string
    
  EeCertificate:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EeCertificateUpdate'
      - properties:
          templateUrl:
            type: string
  
  EePagedCertificate:
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeCertificate'
  
  EeAttendeeCertificate:
    properties:
      attendee:
        $ref: '#/definitions/EeEventAttendee'
      certificate:
        $ref: '#/definitions/EeCertificate'
  
  EeEventDropinUpdate:
    type: object
    required:
      - name
      - status
    properties:
      name:
        type: string
      color:
        type: string
      dropinType:
        type: string
        enum:
          - CheckIn
          - CheckOut
          - Other
      startTimestamp:
        type:
          integer
      endTimestamp:
        type:
          integer
      isNotificationEnabled:
        type:
          boolean
        default: true
      status:
        type:
          string
        enum:
          - Auto
          - Open
          - Closed
        default: Auto
      customMessage:
        type:
          string
        maxLength: 500
      
  EeEventDropin:
    type: object
    allOf:
      - $ref: '#/definitions/EeEventDropinUpdate'
      - $ref: '#/definitions/EeBaseId'
      - properties:
          eventId:
            type: string
          eventName:
            type: string
          eventLocation:
            type: string
          eventPicture:
            type: string
          organizerId:
            type: string
          organizerName:
            type: string
          tickets:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
  
  EePagedEventDropin:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeEventDropin'
          
  EeEventAttendeeTransfer:
    type: object
    properties:
      attendeeIds:
        type: array
        items:
          type: string
      fromTicketId:
        type: string
      toTicketId:
        type: string
        
  EeKioskUpdate:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      description:
        type: string
      color:
        type: string
      dropinId:
        type: string
        
  EeKiosk:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EeKioskUpdate'
      - properties:
          isNew:
            type: boolean
            default: false
          dropin:
            $ref: '#/definitions/EeEventDropin'
  EePagedKiosk:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeKiosk'
  
  EeAttendeeNotification:
    type: object
    properties:
      eventId:
        type: string
      attendeeIds:
        type: array
        items:
          type: string
      message:
        type: string