swagger: '2.0'
info:
  description: Events service for eDropin
  version: 1.0.0
  title: eDropin Events
  license:
    name: UNLICENSED
  contact:
    name: Saj Arora
    email: dev@edropin.com
host: events-dot-edropin-amalgam.appspot.com
basePath: /
tags:
  - name: eePermissions
    description: Permissions
  - name: eeEvents
    description: Events
  - name: eeEventTags
    description: Tagging profiles and invites in an event
  - name: eeEventAttendees
    description: Event Attendees
  - name: eeEventDropins
    description: Event Dropins
  - name: eeEventCertificates
    description: Manage eCertificates - creation, update and deletion and assigning to attendees
  - name: eeKiosk
    description: Self-serve kiosks
  - name: eeEventAutomations
    description: Automated actions based on triggers such as dropin => assign certificate
  - name: eeQrCode
    description: Generate qr codes
  - name: eeSurveys
    description: Manage surveys
  - name: eeMessages
    description: Manage, send and track event messages
  - name: eePACE
    description: AGD PACE endpoints for managing providers
schemes:
  - https
produces:
  - application/json
securityDefinitions:
  Authorization:
    type: apiKey
    in: header
    name: Authorization
  ClientKey:
    type: apiKey
    in: header
    name: X-Client-Key
security:
  - ClientKey: []
    Authorization: []
paths:
  ### PERMISSIONS
  '/permissions/accept-invite/{inviteToken}':
    parameters:
      - in: path
        name: inviteToken
        description: Invite Token
        required: true
        type: string
    post:
      tags:
        - eePermissions
      summary: 'Accept a permission invite'
      operationId: acceptPermissionInvite
      parameters:
        - in: query
          name: v
          description: Accept or decline an invite
          type: string
          enum:
            - accept
            - decline
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EePermissionAccept'
        '404':
          description: Permission invite not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
          
  '/permissions/{entityType}/{entityId}/send-invite':
    parameters:
      - $ref: '#/parameters/entityType'
      - $ref: '#/parameters/entityId'
    post:
      tags:
        - eePermissions
      summary: 'Send a permission invite'
      operationId: sendPermissionInvite
      parameters:
        - in: body
          name: permissionInvite
          description: Object for permission invite
          required: true
          schema:
            $ref: '#/definitions/EePermissionInviteCreate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EePagedPermissionInvite'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/permissions/{entityType}/{entityId}/accounts':
    parameters:
      - $ref: '#/parameters/entityType'
      - $ref: '#/parameters/entityId'
    get:
      tags:
        - eePermissions
      summary: Get permissions for entity
      operationId: paginatePermissions
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Permissions for account
          schema:
            $ref: '#/definitions/EePagedPermission'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/permissions/{entityType}/{entityId}/accounts/{accountId}':
    parameters:
      - $ref: '#/parameters/entityType'
      - $ref: '#/parameters/entityId'
      - $ref: '#/parameters/accountId'
    get:
      tags:
        - eePermissions
      summary: Check account has permission
      operationId: hasPermission
      parameters:
        - in: query
          type: string
          required: false
          name: permission
      responses:
        '200':
          description: Account has Permission
          schema:
            $ref: '#/definitions/EePermissionCheck'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eePermissions
      summary: Set account permission
      operationId: setPermission
      parameters:
        - in: body
          required: true
          name: permissionProps
          schema:
            $ref: '#/definitions/EePermissionInput'
      responses:
        '200':
          description: Set Account Permission
          schema:
            $ref: '#/definitions/EePermission'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eePermissions
      summary: Remove all permissions for account
      operationId: removePermissionsForAccount
      responses:
        '200':
          description: Permissions for account
          schema:
            $ref: '#/definitions/EeSuccess'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  ### PERMISSION END  
  
  ### EVENTS
  /events:
    get:
      tags:
        - eeEvents
      summary: Get Events
      operationId: getAllEvents
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/searchCoords'
        - $ref: '#/parameters/filterTimestamp'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Events
          schema:
            $ref: '#/definitions/EePagedEvent'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eeEvents
      summary: Create Event
      operationId: createEvent
      parameters:
        - in: body
          name: eventProps
          description: Event object that needs to be created
          required: true
          schema:
            $ref: '#/definitions/EeEventUpdate'
      responses:
        '200':
          description: Event created
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/get-multi':
    get:
      tags:
        - eeEvents
      summary: Get Multiple Events
      operationId: getMultipleEvents
      parameters:
        - in: query
          name: eventIds
          type: array
          items:
            type: string
      responses:
        '200':
          description: Event
          schema:
            type: array
            items:
              $ref: '#/definitions/EeEvent'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEvents
      summary: Get a Event from the directory
      operationId: getEvent
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          description: Invalid ID supplied
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEvents
      summary: Update an existing Event
      operationId: updateEvent
      parameters:
        - in: body
          name: eventProps
          description: Event object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/EeEventUpdate'
      responses:
        '200':
          description: Event updated
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEvents
      summary: Delete an existing Event
      operationId: deleteEvent
      responses:
        '204':
          description: Event deleted
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/events/categories':
    get:
      tags:
        - eeEvents
      summary: Get Event Categories
      operationId: getEventCategories
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Categories
          schema:
            $ref: '#/definitions/EeFacetSearch'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/search':
    get:
      tags:
        - eeEvents
      summary: Search Events
      operationId: searchEvent
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/searchCoords'
        - $ref: '#/parameters/filterTimestamp'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Events
          schema:
            $ref: '#/definitions/EePagedEvent'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  ### EVENTS END
  
  ### EVENT TAGS
  '/events/{eventId}/tags':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventTags
      summary: Paginate tags linked to an event
      operationId: listEventTags
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Event Profiles
          schema:
            $ref: '#/definitions/EePagedEventTag'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/tags-search':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventTags
      summary: Paginate tags linked to an event
      operationId: searchTagsForEvent
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Event Profiles
          schema:
            $ref: '#/definitions/EePagedEventTag'
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/{eventId}/tags/{profileId}':
    parameters:
      - $ref: '#/parameters/eventId'
      - $ref: '#/parameters/profileId'
    put:
      tags:
        - eeEventTags
      summary: Create or update a tag in an event [will make tag request if new tag]
      operationId: upsertEventTag
      parameters:
        - in: body
          name: roleProp
          description: Profile role to update
          required: true
          schema:
            $ref: '#/definitions/EeEventTagUpsert'
      responses:
        '200':
          description: Event Profile
          schema:
            $ref: '#/definitions/EeEventTag'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/event-tags/{tagId}':
    parameters:
      - $ref: '#/parameters/tagId'
    delete:
      tags:
        - eeEventTags
      summary: Remove tag from event
      operationId: removeEventTag
      responses:
        '200':
          description: Removed profile
          schema:
            $ref: '#/definitions/EeSuccess'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/events/eventTagStatusUpdate':
    post:
      tags:
        - eeEventTags
      security: []
      parameters:
        - in: query
          name: apiKey
          type: string
          required: true
        - in: body
          name: subData
          description: Base64 encoded message
          required: true
          schema:
            $ref: '#/definitions/EePubSubMessage'
      summary: Pub sub to update event tag, accept or decline [used by service account]
      operationId: updateEventTagStatus
      responses:
        '200':
          description: OK
          schema:
            type: string
        '400':
          description: Invalid ID supplied
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  ### END OF EVENT TAGS
  
  ### EVENT TICKETS
  '/events/{eventId}/tickets/{ticketId}':
    parameters:
      - $ref: '#/parameters/eventId'
      - $ref: '#/parameters/ticketId'
    post:
      tags:
        - eeEvents
      summary: Add Ticket to event
      operationId: upsertTicket
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/EeTicketUpdate'
      responses:
        '200':
          description: Event Ticket added
          schema:
            $ref: '#/definitions/EeEvent'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEvents
      summary: Remove ticket from event
      operationId: removeTicket
      responses:
        '204':
          description: Ticket removed
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Ticket not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  ### END OF EVENT TICKETS
  
  ### EVENT DROPINS
  '/events/{eventId}/dropins':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventDropins
      summary: List all event dropins
      operationId: listDropins
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Attendees for the event
          schema:
            $ref: '#/definitions/EePagedEventDropin'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eeEventDropins
      summary: Create a dropin to an event
      operationId: createDropin
      parameters:
        - in: body
          name: body
          description: Dropin object to be created
          required: true
          schema:
            $ref: '#/definitions/EeEventDropinUpdate'
      responses:
        '200':
          description: Dropin added
          schema:
            $ref: '#/definitions/EeEventDropin'
        '400':
          description: Invalid request
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/dropins/{dropinId}':
    parameters:
      - $ref: '#/parameters/dropinId'
    get:
      tags:
        - eeEventDropins
      summary: Retrieve a dropin
      operationId: retrieveDropin
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeEventDropin'
        '404':
          description: Dropin not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEventDropins
      summary: Update dropin to event
      operationId: updateDropin
      parameters:
        - in: body
          name: body
          description: Dropin to update
          required: true
          schema:
            $ref: '#/definitions/EeEventDropinUpdate'
      responses:
        '200':
          description: Event Dropin updated
          schema:
            $ref: '#/definitions/EeEventDropin'
        '404':
          description: Dropin not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEventDropins
      summary: Delete an existing dropin
      operationId: deleteDropin
      responses:
        '204':
          description: Dropin deleted
          schema:
            $ref: '#/definitions/EeEventDropin'
        '404':
          description: Dropin not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/dropins/{dropinId}/attendees':
    parameters:
      - $ref: '#/parameters/dropinId'
      - in: query
        name: attendeeIds
        type: array
        items:
          type: string
    put:
      tags:
        - eeEventDropins
      summary: Assign dropins to attendees
      operationId: createAttendeeDropin
      responses:
        '200':
          description: Dropin assigned
          schema:
            $ref: '#/definitions/EeEventAttendeeDropin'
        '404':
          description: Dropin not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEventDropins
      summary: Remove dropins from attendees
      operationId: deleteAttendeeDropin
      responses:
        '204':
          description: Dropin removed
          schema:
            $ref: '#/definitions/EePagedEventAttendee'
        '404':
          description: Dropin not found
  
  '/events/{eventId}/attendees':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventAttendees
      summary: List all event attendees
      operationId: listAttendees
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Attendees for the event
          schema:
            $ref: '#/definitions/EePagedEventAttendee'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eeEventAttendees
      summary: Add an Attendee to an event
      operationId: createAttendee
      parameters:
        - $ref: '#/parameters/eventId'
        - in: query
          name: ticketId
          type: string
          required: true
        - in: body
          name: attendeeProps
          description: Attendee object to be created
          required: true
          schema:
            $ref: '#/definitions/EeEventAttendeeUpdate'
      responses:
        '200':
          description: Attendee added
          schema:
            $ref: '#/definitions/EeEventAttendee'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          $ref: '#/responses/InvalidInputResponse'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/events/{eventId}/attendees/export':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventAttendees
      summary: Export event attendee data
      operationId: exportAttendees
      parameters:
        - $ref: '#/parameters/searchFacets'
      responses:
        '200':
          description: Export attendees for the event as a csv
          schema:
            $ref: '#/definitions/EeCsv'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/attendees':
    get:
      tags:
        - eeEventAttendees
      summary: Search user attendees
      operationId: listUserAttendees
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Get attendees for user
          schema:
            $ref: '#/definitions/EePagedEventAttendee'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/attendees/{attendeeId}':
    parameters:
      - $ref: '#/parameters/attendeeId'
    get:
      tags:
        - eeEventAttendees
      summary: Retrieve an attendee
      operationId: retrieveAttendee
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeEventAttendee'
        '400':
          description: Invalid ID supplied
        '404':
          description: Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEventAttendees
      summary: Update an attendee
      operationId: updateAttendee
      parameters:
        - in: body
          name: attendeeProps
          description: Attendee object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/EeEventAttendeeUpdate'
      responses:
        '200':
          description: Attendee updated
          schema:
            $ref: '#/definitions/EeEventAttendee'
        '400':
          description: Invalid ID supplied
        '404':
          description: Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEventAttendees
      summary: Delete an Event Attendee
      operationId: deleteAttendee
      responses:
        '204':
          description: Event Attendee deleted
          schema:
            $ref: '#/definitions/EeEventAttendee'
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          description: Event Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/attendees/{attendeeId}/link':
    post:
      tags:
        - eeEventAttendees
      summary: Send attendee link
      operationId: sendAttendeeLink
      parameters:
        - $ref: '#/parameters/attendeeId'
        - in: body
          name: body
          description: Send to a different email than the one associated with the account
          required: true
          schema:
            $ref: '#/definitions/EeSendLinkInput'
      responses:
        '200':
          description: Claim sent
          schema:
            $ref: '#/definitions/EeSuccess'
        '404':
          description: Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/attendees/transfer':
    post:
      tags:
        - eeEventAttendees
      summary: Transfer attendees from one ticket to another ticket (can also be two tickets from two separate events)
      operationId: transferAttendees
      parameters:
        - in: body
          name: body
          description: Attendee transfer properties
          required: true
          schema:
            $ref: '#/definitions/EeEventAttendeeTransfer'
      responses:
        '200':
          description: Attendees transfered
          schema:
            $ref: '#/definitions/EePagedEventAttendee'
        '404':
          description: Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/attendees/code':
    parameters:
      - in: query
        name: code
        type: string
        required: true
    get:
      tags:
        - eeEventAttendees
      summary: Get all attendee tickets associated with the code in query
      operationId: retrieveAttendeesByCode
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EePagedEventAttendee'
        '400':
          description: Invalid ID supplied
        '404':
          description: Attendee not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
          
  '/events/{eventId}/certificates':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventCertificates
      summary: List all event certificates
      operationId: listCertificates
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Certificates for the event
          schema:
            $ref: '#/definitions/EePagedEventCertificate'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eeEventCertificates
      summary: Create a certificate for an event
      operationId: createCertificate
      parameters:
        - in: body
          name: body
          description: Certificate object to be created
          required: true
          schema:
            $ref: '#/definitions/EeEventCertificateUpdate'
      responses:
        '200':
          description: Certificate added
          schema:
            $ref: '#/definitions/EeEventCertificate'
        '400':
          description: Invalid request
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/certificates/{certificateId}':
    parameters:
      - $ref: '#/parameters/certificateId'
    get:
      tags:
        - eeEventCertificates
      summary: Retrieve a certificate
      operationId: retrieveCertificate
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeEventCertificate'
        '404':
          description: Certificate not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEventCertificates
      summary: Update certificate to event
      operationId: updateCertificate
      parameters:
        - in: body
          name: body
          description: Certificate to update
          required: true
          schema:
            $ref: '#/definitions/EeEventCertificateUpdate'
      responses:
        '200':
          description: Event Certificate updated
          schema:
            $ref: '#/definitions/EeEventCertificate'
        '404':
          description: Certificate not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEventCertificates
      summary: Delete an existing certificate
      operationId: deleteCertificate
      responses:
        '204':
          description: Certificate deleted
          schema:
            $ref: '#/definitions/EeEventCertificate'
        '404':
          description: Certificate not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
          
  '/certificates/attendees':
    parameters:
      - in: query
        name: certificateIds
        type: array
        items:
          type: string
      - in: query
        name: attendeeIds
        type: array
        items:
          type: string
    put:
      tags:
        - eeEventCertificates
      summary: Create certificates for attendees
      operationId: createAttendeeCertificate
      responses:
        '200':
          description: Certificate assigned
          schema:
            $ref: '#/definitions/EePagedEventAttendee'
        '404':
          description: Certificate not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEventCertificates
      summary: Delete certificates from attendees
      operationId: deleteAttendeeCertificate
      responses:
        '204':
          description: Certificate removed
          schema:
            $ref: '#/definitions/EePagedEventAttendee'
        '404':
          description: Certificate not found
  '/certificates/download/{certificateCode}':
    parameters:
      - $ref: '#/parameters/certificateCode'
    post:
      tags:
        - eeEventCertificates
      summary: Download a certificate [certificateCode is eeEventAttendee.certificates[].code]
      operationId: downloadCertificate
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeAttendeeCertificate'
        '400':
          description: Invalid ID supplied
        '404':
          description: Attendee/Certificate not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
          
  '/certificates/inspectTemplate':
    get:
      tags:
        - eeEventCertificates
      summary: Inspect a template for all the placeholders
      operationId: inspectTemplate
      parameters:
        - in: query
          name: templateUrl
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeCertificateInspect'
        '400':
          description: Invalid ID supplied
        '404':
          description: Attendee/Certificate not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
          
  /kiosks:
    get:
      tags:
        - eeKiosk
      summary: List all user's kiosks
      operationId: listAllKiosks
      parameters:
        - $ref: '#/parameters/searchQuery'
        - $ref: '#/parameters/searchFacets'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Paged list of kiosks
          schema:
            $ref: '#/definitions/EePagedKiosk'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eeKiosk
      summary: Activate a kiosk
      operationId: activateKiosk
      responses:
        '200':
          description: Kiosk activated
          schema:
            $ref: '#/definitions/EeKiosk'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeKiosk
      summary: Deactivate kiosk
      operationId: deactivateKiosk
      responses:
        '200':
          description: Kiosk deactivated
          schema:
            $ref: '#/definitions/EeKiosk'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/kiosks/{kioskId}':
    parameters:
      - $ref: '#/parameters/kioskId'
    get:
      tags:
        - eeKiosk
      summary: Get a kiosk
      operationId: getKiosk
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeKiosk'
        '404':
          description: Kiosk not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeKiosk
      summary: Link a kiosk to my account
      operationId: linkKiosk
      parameters:
        - in: body
          name: kioskProps
          description: Kiosk object that needs to be linked
          required: false
          schema:
            $ref: '#/definitions/EeKioskUpdate'
      responses:
        '200':
          description: Kiosk linked
          schema:
            $ref: '#/definitions/EeKiosk'
        '404':
          description: Kiosk not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/kiosks/{kioskId}/unlink':
    parameters:
      - $ref: '#/parameters/kioskId'
    delete:
      tags:
        - eeKiosk
      summary: Unlink a kiosk
      operationId: unlinkKiosk
      responses:
        '200':
          description: Unlink a kiosk
          schema:
            $ref: '#/definitions/EeKiosk'
        '404':
          description: Kiosk not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
          
  '/events/{eventId}/automations':
    parameters:
      - $ref: '#/parameters/eventId'
    get:
      tags:
        - eeEventAutomations
      summary: List all event Automations
      operationId: listAllEventAutomations
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Automations for the event
          schema:
            $ref: '#/definitions/EePagedEventAutomation'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    post:
      tags:
        - eeEventAutomations
      summary: Add an automation to an event
      operationId: addEventAutomation
      parameters:
        - in: body
          name: automationProps
          description: Automation object to be created
          required: true
          schema:
            $ref: '#/definitions/EeEventAutomationUpdate'
      responses:
        '200':
          description: Automation added
          schema:
            $ref: '#/definitions/EeEventAutomation'
        '400':
          description: Invalid request
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  '/automations/{automationId}':
    parameters:
      - $ref: '#/parameters/automationId'
    get:
      tags:
        - eeEventAutomations
      summary: Get an Automation
      operationId: getEventAutomation
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EeEventAutomation'
        '404':
          description: Automation not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    put:
      tags:
        - eeEventAutomations
      summary: Update Automation to event
      operationId: updateEventAutomation
      parameters:
        - in: body
          name: automationProps
          description: Automation to update
          required: true
          schema:
            $ref: '#/definitions/EeEventAutomationUpdate'
      responses:
        '200':
          description: Event Automation updated
          schema:
            $ref: '#/definitions/EeEventAutomation'
        '404':
          description: Automation not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
    delete:
      tags:
        - eeEventAutomations
      summary: Delete an existing Automation
      operationId: deleteEventAutomation
      responses:
        '204':
          description: Automation deleted
          schema:
            $ref: '#/definitions/EeSuccess'
        '404':
          description: Automation not found
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/automations/{triggerType}/trigger':
    post:
      tags:
        - eeEventAutomations
      security: []
      parameters:
        - in: path
          name: triggerType
          type: string
          required: true
        - in: query
          name: apiKey
          type: string
          required: true
        - in: body
          name: subData
          description: Base64 encoded message
          required: true
          schema:
            $ref: '#/definitions/EePubSubMessage'
      summary: Pub sub to trigger an event automation
      operationId: triggerEventAutomation
      responses:
        '200':
          description: OK
          schema:
            type: string
        '400':
          description: Invalid type/id supplied
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  
  '/qr-code/{data}':
    parameters:
      - in: path
        name: data
        required: true
        type: string
      - in: query
        name: background
        type: string
        enum:
         - light
         - dark
        default: light
    get:
      tags:
        - eeQrCode
      summary: Get a qr code
      operationId: getQRCode
      security: []
      produces:
        - image/png
        - image/gif
        - image/jpeg
      responses:
        '200':
          description: OK
          schema:
            type: file
  
  /organizers/{organizerId}/surveys:
    get:
      tags:
        - eeSurveys
      summary: List all user's surveys
      operationId: listSurveys
      parameters:
        - in: path
          name: organizerId
          type: string
          required: true
        - in: query
          name: category
          type: string
        - in: query
          name: categoryId
          type: string
        - in: query
          name: item
          type: string
        - in: query
          name: itemType
          type: string
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Paged list of Surveys
          schema:
            $ref: '#/definitions/EePagedSurvey'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  /surveys/{surveyId}:
    parameters:
      - $ref: '#/parameters/surveyId'
    get:
      tags:
        - eeSurveys
      summary: Retrieve a survey with the given surveyID
      operationId: retrieveSurvey
      responses:
        '200':
          description: Retrieves the survey with the given surveyID
          schema:
            $ref: '#/definitions/EeSurvey'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  /surveys-aggregate/get-multi:
    parameters:
      - in: query
        name: surveyIds
        type: array
        items:
          type: string
    get:
      tags:
        - eeSurveys
      summary: Retrieve survey aggregate with the given surveyID
      operationId: retrieveSurveyAggregate
      responses:
        '200':
          description: Retrieves the survey with the given surveyID
          schema:
            $ref: '#/definitions/EePagedSurveyAggregate'
        '400':
          $ref: '#/responses/InvalidInputResponse'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '500':
          $ref: '#/responses/Default500ErrorResponse'
  /surveys/get-multi:
    get:
      parameters:
        - in: query
          name: surveyIds
          type: array
          items:
            type: string
      tags:
        - eeSurveys
      summary: List all surveys by surveyIDs
      operationId: retrieveAllSurveys
      responses:
        '200':
          description: Retrieve as paged survey
          schema:
            $ref: '#/definitions/EePagedSurvey'
  /surveys/{surveyId}/responses:
    get:
      tags:
        - eeSurveys
      parameters:
        - $ref: '#/parameters/surveyId'
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      summary: List responses for a survey
      operationId: listSurveyResponses
      responses:
        '200':
          description: Paginated list of responses for a survey
          schema:
            $ref: '#/definitions/EePagedSurveyResponse'
  /surveys-responses/get-multi:
    get:
      tags:
        - eeSurveys
      parameters:
        - in: query
          name: responseIds
          type: array
          items:
            type: string
      summary: Retrieve response for survey
      operationId: retrieveResponse
      responses:
        '200':
          description: Retrieves the survey responses with the given responseIds
          schema:
            $ref: '#/definitions/EeSurveyResponse'
  
  /survey-responses/{surveyId}:
    post:
      tags:
        - eeSurveys
      summary: Create responses for a survey with the given id
      operationId: createResponse
      parameters:
        - $ref: '#/parameters/surveyId'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/EeSurveyResponseInput'
      responses:
        '200':
          description: Survey responses with claim code
          schema:
            $ref: '#/definitions/EeSurveyResponse'
  /organizers/{organizerId}/survey-responses:
    get:
      parameters:
        - in: path
          name: organizerId
          type: string
          required: true
        - in: query
          name: surveyId
          type: string
        - in: query
          name: category
          type: string
        - in: query
          name: categoryId
          type: string
        - in: query
          name: item
          type: string
        - in: query
          name: itemType
          type: string
      tags:
        - eeSurveys
      summary: Retrieves all survey responses for the given organizerID
      operationId: listResponses
      responses:
        '200':
          description: Retrieves the survey response with the given surveyId for the current user
          schema:
            $ref: '#/definitions/EeSurveyResponse'
  
  /events/{eventId}/messages:
    parameters:
      - $ref: '#/parameters/eventId'
    post:
      tags:
        - eeMessages
      summary: Create message for event attendees
      operationId: createMessage
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/EeMessageInput'
      responses:
        '200':
          description: Message
          schema:
            $ref: '#/definitions/EeMessage'
    get:
      tags:
        - eeMessages
      summary: List messages for event attendees
      operationId: listMessages
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Paged messages
          schema:
            $ref: '#/definitions/EePagedMessage'
  
  /messages/{messageId}:
    parameters:
      - $ref: '#/parameters/messageId'
    delete:
      tags:
        - eeMessages
      summary: Delete message for event attendees
      operationId: removeMessage
      responses:
        '200':
          description: Message
          schema:
            $ref: '#/definitions/EeMessage'
    get:
      tags:
        - eeMessages
      summary: List messages for event attendees
      operationId: retrieveMessage
      responses:
        '200':
          description: Message
          schema:
            $ref: '#/definitions/EeMessage'
    put:
      tags:
        - eeMessages
      summary: Update message for event attendees
      operationId: updateMessage
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/EeMessageInput'
      responses:
        '200':
          description: Message
          schema:
            $ref: '#/definitions/EeMessage'
  
  /pace-providers:
    get:
      tags:
        - eePACE
      summary: Paginate all PACE providers
      operationId: listProviders
      parameters:
        - $ref: '#/parameters/cursor'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: Paged list of PACE Providers
          schema:
            $ref: '#/definitions/EePagedPACEProvider'
  
  /pace-providers/{profileId}:
    parameters:
      - $ref: '#/parameters/profileId'
    post:
      tags:
        - eePACE
      summary: Create or update a pace provider
      operationId: upsertPaceProvider
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/EePACEProviderUpdate'
      responses:
        '200':
          description: PACE Provider
          schema:
            $ref: '#/definitions/EePACEProvider'
    delete:
      tags:
        - eePACE
      summary: Delete a provider
      operationId: deleteProvider
      responses:
        '200':
          description: Delete a provider
          schema:
            $ref: '#/definitions/EeSuccess'
    get:
      tags:
        - eePACE
      summary: Retrieve a provider
      operationId: retrieveProvider
      responses:
        '200':
          description: Message
          schema:
            $ref: '#/definitions/EePACEProvider'
    
parameters:
  entityType:
    name: entityType
    in: path
    description: Entity Type
    type: string
    required: true
  entityId:
    name: entityId
    in: path
    description: Entity Id
    type: string
    required: true
  limit:
    name: limit
    in: query
    description: Number of items returned
    type: integer
    format: int32
    minimum: 0
    exclusiveMinimum: true
    maximum: 50
    exclusiveMaximum: false
    multipleOf: 10
    default: 20
  cursor:
    name: cursor
    in: query
    description: Start Cursor for query
    type: string
  accountId:
    name: accountId
    in: path
    description: Account Id
    type: string
    required: true
  attendeeId:
    name: attendeeId
    in: path
    description: Attendee Id
    type: string
    required: true
  automationId:
    name: automationId
    in: path
    description: Automation Id
    type: string
    required: true
  certificateId:
    name: certificateId
    in: path
    description: Certificate Id
    type: string
    required: true
  certificateCode:
    name: certificateCode
    in: path
    description: Certificate Code
    type: string
    required: true
  dropinId:
    name: dropinId
    in: path
    description: Dropin Id
    type: string
    required: true
  eventId:
    name: eventId
    in: path
    description: Event Id
    type: string
    required: true
  profileId:
    name: profileId
    in: path
    description: Profile Id
    type: string
    required: true
  surveyId:
    name: surveyId
    in: path
    description: Survey Id
    type: string
    required: true
  inviteId:
    name: inviteId
    in: path
    description: Invite Id
    type: string
    required: true
  kioskId:
    name: kioskId
    in: path
    description: Kiosk Id
    type: string
    required: true
  searchQuery:
    in: query
    name: q
    type: string
  filterTimestamp:
    in: query
    name: filterTimestamp
    description: Filter by start and end time e.g. (starting after 1111 ending before 1234 = 1111,1234)
    type: array
    items:
      type: integer
    maxLength: 2
  messageId:
    name: messageId
    in: path
    description: Message Id
    type: string
    required: true
  searchCoords:
    in: query
    name: searchCoords
    description: Coordinates for search
    type: array
    required: false
    items:
      type: string
  searchFacets:
    in: query
    name: facets
    type: string
    description: 'e.g [profiledIds:edropin],[profileIds:agdontario]'
  tagId:
    name: tagId
    in: path
    description: Tag Id
    type: string
    required: true
  ticketId:
    name: ticketId
    in: path
    description: Ticket Id
    type: string
    required: true
responses:
  Default500ErrorResponse:
    description: An unexpected error occured.
    schema:
      $ref: '#/definitions/EeDefaultError'
  InvalidInputResponse:
    description: Validation exception
  UnauthorizedError:
    description: API key is missing or invalid
    headers:
      WWW_Authenticate:
        type: string
definitions:
  EeBaseId:
    type: object
    properties:
      id:
        type: string
      createdOn:
        type: string
        readOnly: true
      modifiedOn:
        type: string
        readOnly: true
      version:
        type: string
        readOnly: true
      isDeleted:
        type: boolean
  EePagination:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
      page:
        type: integer
      total:
        type: integer
      totalPages:
        type: integer
      facets:
        type: object
  EeDSPagination:
    type: object
    properties:
      pageSize:
        type: integer
        format: int32
      nextCursor:
        type: string
  EeDefaultError:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  EeAddress:
    type: object
    properties:
      formatted:
        type: string
      landmark:
        type: string
      street:
        type: string
      city:
        type: string
      state:
        type: string
      country:
        type: string
      zip:
        type: string
      geoloc:
        $ref: '#/definitions/EeGeoloc'
  EeGeoloc:
    type: object
    properties:
      lat:
        type: number
        format: float
      lng:
        type: number
        format: float
  
  EePermissionInviteCreate:
    type: object
    required:
      - emails
      - permissions
    properties:
      invitedByName:
        type: string
      emails:
        type: array
        items:
          type: string
      permissions:
        type: array
        items:
          type: string
      message:
        type: string
        
  EePermissionInvite:
    type: object
    properties:
      id:
        type: string
      modifiedOn:
        type: string
      creatorId:
        type: string
      entityType:
        type: string
      entityId:
        type: string
      permissions:
        type: object
      email:
        type: string
      message:
        type: string
      acceptedWhen:
        type: integer
      declinedWhen:
        type: integer
      acceptedById:
        type: string
      acceptedByName:
        type: string
  
  EePermission:
    type: object
    properties:
      id:
        type: string
      modifiedOn:
        type: string
      creatorId:
        type: string
      entityType:
        type: string
      entityId:
        type: string
      permissions:
        type: object
      email:
        type: string
      name:
        type: string
      picture:
        type: string
      accountId:
        type: string
      
  EePermissionInput:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
  EePagedPermissionInvite:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EeDSPagination'
      allPermission:
        type: array
        items:
          type: string
      items:
        type: array
        items:
          $ref: '#/definitions/EePermissionInvite'
  EePagedPermission:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EeDSPagination'
      allPermission:
        type: array
        items:
          type: string
      items:
        type: array
        items:
          $ref: '#/definitions/EePermission'
  EePermissionCheck:
    type: object
    properties:
      hasPermission:
        type: boolean
      permission:
        $ref: '#/definitions/EePermission'
  
  EePermissionAccept:
    type: object
    properties:
      invite:
        $ref: '#/definitions/EePermissionInvite'
      permission:
        $ref: '#/definitions/EePermission'
        
  EeSuccess:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: object
  EeProfile:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      location:
        type: string
      profileType:
        type: string
      bio:
        type: string
      picture:
        type: string
      tagId:
        type: string
      isInvited:
        type: boolean

  EeEventUpdate:
    type: object
    required:
      - organizerId
      - name
      - agreeTerms
    properties:
      organizerId:
        type: string
      name:
        type: string
      slug:
        type: string
      startTimestamp:
        type: integer
        format: int32
      endTimestamp:
        type: integer
        format: int32
      timezone:
        type: string
      bio:
        type: string
      picture:
        type: string
      pictures:
        type: array
        items:
          $ref: '#/definitions/EePicture'
      website:
        type: string
      isPace:
        type: boolean
      paceRegion:
        type: string
        enum:
          - Nationally
          - Locally
      isOnline:
        type: boolean
      onlineOnly:
        type: boolean
      isHandsOn:
        type: boolean
      isSeminar:
        type: boolean
      isSocial:
        type: boolean
      isDestination:
        type: boolean
      destinationFlags:
        type: array
        items:
          type: string
      isModular:
        type: boolean
      isLive:
        type: boolean
      isPublic:
        type: boolean
      categories:
        type: array
        items:
          type: string
      address:
        $ref: '#/definitions/EeAddress'
      marketLocations:
        type: array
        items:
          $ref: '#/definitions/EeGeocodeLocation'
      policy:
        type: string
      modules:
        type: array
        items:
          $ref: '#/definitions/EeEventModule'
      agreeTerms:
        type: string
        enum:
          - v1
  
  EePACECredit:
    type: object
    properties:
      region:
        type: string
        enum:
          - Nationally
          - Locally
      creditAmount:
        type: number
        minimum: 0
      subjectCode:
        type: string
  
  EeGeocodeLocation:
    type: object
    properties:
      geoloc:
        $ref: '#/definitions/EeGeoloc'
      formatted:
        type: string
  
  EeEventModule:
    type: object
    required:
      - name
      - startTimestamp
      - endTimestamp
      - timezone
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      startTimestamp:
        type: integer
        minimum: 0
      endTimestamp:
        type: integer
        minimum: 0
      timezone:
        type: string
      address:
        $ref: '#/definitions/EeAddress'
      ticketIds:
        type: array
        items:
          type: string
      isRequired:
        type: boolean
        default: false
      isDeleted:
        type: boolean
        default: false
  EePicture:
    type: object
    required:
      - src
    properties:
      src:
        type: string
      caption:
        type: string 
  EePictureThumb:
    type: object
    properties:
      slim:
        type: string
      square:
        type: string
      wide:
        type: string
  EeEvent:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EeEventUpdate'
      - properties:
          organizerName:
            type: string
          organizerUsername:
            type: string
          organizerPicture:
            type: string
          profiles:
            type: array
            items:
              $ref: '#/definitions/EeEventProfile'
          isFree:
            type: boolean
          pictureThumbs:
            $ref: '#/definitions/EePictureThumb'
          availableCurrencies:
            type: array
            items:
              type: string
          totalProfiles:
            type: integer
            format: int32
          totalTickets:
            type: integer
            format: int32
          totalTicketInventory:
            type: integer
            format: int32
          totalTicketSold:
            type: integer
            format: int32
          tickets:
            type: array
            items:
              $ref: '#/definitions/EeTicket'
          priceStartingAt:
            $ref: '#/definitions/EePriceStartingAt'
          location:
            type: array
            items:
              $ref: '#/definitions/EeGeocodeLocation'
  
  EePriceStartingAt:
    type: object
    properties:
      retailPrice:
        type: integer
        minimum: 0
      storeCurrency:
        type: string
      exchangeRates:
        type: object
        additionalProperties:
          $ref: '#/definitions/EeExchangeRate'
  
  EeExchangeRate:
    type: number
    format: float
  
  EeEventProfile:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      roles:
        type: array
        items:
          type: string
  EePagedEvent:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeEvent'
  
  EeTicketUpdate:
    type: object
    properties:
      moduleId:
        type: string
      surveyQuestions:
        type: object
        additionalProperties:
          $ref: '#/definitions/EeSurveyQuestion'

  EeEventTagUpsert:
    type: object
    properties:
      roles:
        type: array
        items:
          type: string
        default: []
      isInvited:
        type: boolean
        default: false
      
  EeEventTag:
    type: object
    properties:
      id:
        type: string
      roles:
        type: array
        items:
          type: string
      profileId:
        type: string
      taggedById:
        type: string
      taggedByName:
        type: string
      eventId:
        type: string
      isInvited:
        type: boolean
      referralCode:
        type: string
      acceptedWhen:
        type: number
      declinedWhen:
        type: number
            
  EePagedEventTag:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeEventTag'
      profiles:
        type: array
        items:
          $ref: '#/definitions/EeProfile'
  
  EeTicket:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      availableCurrencies:
        type: array
        items:
          type: string
      active:
        type: boolean
        default: true
      retailPrice:
        type: integer
        minimum: 0
      storeCurrency:
        type: string
      surveyId:
        type: string

  EeEventAttendeeUpdate:
    type: object
    properties:
      sendClaim:
        type: boolean
        default: false
      user:
        $ref: '#/definitions/EeUser'
      memberships:
        type: array
        items:
          $ref: '#/definitions/EeMembership'
        
  EeEventAttendee:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - properties:
          timestamp:
            type: integer
          ownerId:
            type: string
          isAnonymous:
            type: boolean
          organizerId:
            type: string
          organizerName:
            type: string
          organizerUsername:
            type: string
          organizerPicture:
            type: string
          eventId:
            type: string
          eventPicture:
            type: string
          eventName:
            type: string
          ticketId:
            type: string
          ticketName:
            type: string
          orderItemId:
            type: string
          itemId:
            type: string
          orderId:
            type: string
          user:
            $ref: '#/definitions/EeUser'
          link:
            type: string
          memberships:
            type: array
            items:
              $ref: '#/definitions/EeMembership'
          dropins:
            type: array
            items:
              $ref: '#/definitions/EeAttendeeDropin'
          dropinCount:
            type: integer
            minimum: 0
          hasDropins:
            type: boolean
            default: false
          certificates:
            type: array
            items:
              $ref: '#/definitions/EeAttendeeCertificate'
          certificateCount:
            type: integer
            minimum: 0
          hasCertificates:
            type: boolean
            default: false
          surveyResponses:
            type: array
            items:
              $ref: '#/definitions/EeAttendeeSurveyResponse'
  EeAttendeeSurveyResponse:
    type: object
    properties:
      type:
        type: string
      id:
        type: string
      surveyId:
        type: string
  
  EeUser:
    type: object
    properties:
      title:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      name:
        type: string
      phone:
        type: string
      email:
        type: string
  
  EePagedEventAttendee:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeEventAttendee'
      events:
        type: array
        items:
          $ref: '#/definitions/EeEvent'
  
  EeEventAttendeeDropin:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/EeEventAttendee'
      newDropins:
        type: array
        items:
          type: string
      surveyResponses:
        type: array
        items:
          $ref: '#/definitions/EeSurveyResponseItem'
  
  EeSendLinkInput:
    type: object
    properties:
      email:
        type: string

  EeMembership:
    type: object
    properties:
      membershipId:
        type: string
      membershipName:
        type: string
      memberId:
        type: string

  EePubSubMessage:
    type: object
    properties:
      subscription:
        type: string
      message:
        type: object
        properties:
          data:
            type: string
          attributes:
            type: object
          message_id:
            type: string

  EeFacetSearch:
    type: object
    properties:
      facetHits:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
            highlighted:
              type: string
            count:
              type: integer
      exhaustiveFacetsCount:
        type: boolean
      processingTimeMS:
        type: integer

  EeCsv:
    type: object
    properties:
      csv:
        type: string
      filename:
        type: string

  EeEventCertificateUpdate:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      templateUrl:
        type: string
      template:
        type: string
      variableMap:
        type: array
        items:
          $ref: '#/definitions/EeEventCertificatePlaceholder'
      substitutionMap:
        type: array
        items:
          $ref: '#/definitions/EeEventCertificatePlaceholder'

  EeEventCertificatePlaceholder:
    type: object
    required:
      - key
    properties:
      key:
        type: string
      value:
        type: string
      autocomplete:
        type: boolean

  EeEventCertificate:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EeEventCertificateUpdate'
      - properties:
          eventId:
            type: string
          eventName:
            type: string
          eventPicture:
            type: string
          organizerId:
            type: string
          organizerName:
            type: string

  EeAttendeeCertificate:
    type: object
    properties:
      certificateId:
        type: string
      name:
        type: string
      generatedLink:
        type: string
      timestamp:
        type: integer
      code:
        type: string

  EeCertificateInspect:
    type: object
    properties:
      templateUrl:
        type: string
      placeholders:
        type: object
        properties:
          # matches:
          #   type: array
          #   items:
          #     type: object
          autofill:
            type: object
          tagKeys:
            type: array
            items:
              type: string

  EePagedEventCertificate:
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeEventCertificate'

  EeEventDropinUpdate:
    type: object
    required:
      - name
      - status
    properties:
      name:
        type: string
      color:
        type: string
      dropinType:
        type: string
        enum:
          - CheckIn
          - CheckOut
          - Other
      startTimestamp:
        type:
          integer
      endTimestamp:
        type:
          integer
      isNotificationEnabled:
        type:
          boolean
        default: true
      status:
        type:
          string
        enum:
          - Auto
          - Open
          - Closed
        default: Auto
      customMessage:
        type:
          string
        maxLength: 500
      tickets:
        type: array
        items:
          $ref: '#/definitions/EeEventDropinTicketUpdate'

  EeEventDropinTicketUpdate:
    type: object
    properties:
      id:
        type: string
      showSurvey:
        type: boolean
      surveyFields:
        type: array
        items:
          type: string

  EeEventDropin:
    type: object
    allOf:
      - $ref: '#/definitions/EeEventDropinUpdate'
      - $ref: '#/definitions/EeBaseId'
      - properties:
          eventId:
            type: string
          eventName:
            type: string
          eventPicture:
            type: string
          organizerId:
            type: string
          organizerName:
            type: string
          tickets:
            type: array
            items:
              $ref: '#/definitions/EeEventDropinTicket'
                
  EeEventDropinTicket:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      shortName:
        type: string
      showSurvey:
        type: boolean
      surveyId:
        type: string
      surveyFields:
        type: array
        items:
          type: string
      
  EeAttendeeDropin:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
      color:
        type: string
      timestamp:
        type: integer
  
  EePagedEventDropin:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeEventDropin'
          
  EeEventAttendeeTransfer:
    type: object
    required:
      - attendeeIds
      - fromEventId
      - toEventId
      - fromTicketId
      - toTicketId
    properties:
      attendeeIds:
        type: array
        items:
          type: string
      fromEventid:
        type: string
      toEventId:
        type: string
      fromTicketId:
        type: string
      toTicketId:
        type: string
        
  EeKioskUpdate:
    type: object
    properties:
      dropinId:
        type: string
      name:
        type: string
      description:
        type: string
      color:
        type: string
      removeDropin:
        type: boolean
      isLocked:
        type: boolean
      screenBrightness:
        type: number
        minimum: 0
        maximum: 1.0
      
        
  EeKiosk:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - properties:
          name:
            type: string
          description:
            type: string
          color:
            type: string
          removeDropin:
            type: boolean
          isLocked:
            type: boolean
          screenBrightness:
            type: number
            minimum: 0
            maximum: 1.0
          linkedAccountId:
            type: string
          isDropinConnected:
            type: boolean
          dropin:
            $ref: '#/definitions/EeEventDropin'
          isDeactivated:
            type: boolean
          deactivatedWhen:
            type: integer
          
  EePagedKiosk:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EePagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeKiosk'
        
  EeEventAutomationUpdate:
    type: object
    required:
      - triggerType
      - actionType
    properties:
      triggerType:
        type: string
        enum:
          - 'dropin'
          - 'certificate'
      triggerCondition:
        type: string
      attendeeStateCondition:
        type: string
      actionType:
        type: string
        enum:
          - 'assignCertificate'
      actionData:
        type: object
      dropletId:
        type: string
      dropletData:
        type: object
      active:
        type: boolean
        default: true
  
  EeEventAutomation:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EeEventAutomationUpdate'
      - properties:
          eventId:
            type: string
          eventName:
            type: string
          eventPicture:
            type: string
          organizerId:
            type: string

  EePagedEventAutomation:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EeDSPagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeEventAutomation'
      
  EeSurveyQuestion:
    type: object
    properties:
      questionType:
        type: string
      prompt:
        type: string
      label:
        type: string
      choices:
        type: array
        items:
          type: string
      notIncluded:
        type: boolean
        default: false
      when:
        $ref: '#/definitions/EeSurveyQuestionWhen'
      metadata:
        type: string
      order:
        type: integer
        minimum: 0
      defaultValue:
        type: string
      validators:
        type: array
        items:
          type: string
          enum:
            - email
            - required
  
  EeSurveyQuestionWhen:
    type: object
    properties:
      value:
        type: string
      disable:
        type: array
        items:
          type: string
      enable:
        type: array
        items:
          type: string
  
  EeSurvey:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - properties:
          eventId:
            type: string
          organizerId:
            type: string
          itemType:
            type: string
          itemId:
            type: string
          name:
            type: string
          autoActiveResponse:
            type: boolean
          isClosed:
            type: boolean
          questions:
            type: object
            additionalProperties:
              $ref: '#/definitions/EeSurveyQuestion'
  
  EeAggregate:
    type: object
    properties:
      label:
        type: string
      values:
        type: object
        additionalProperties:
          $ref: '#/definitions/EeAggregateValue'
  
  EeAggregateValue:
    type: object
    properties:
      label:
        type: string
      total:
        type: integer
      attendeeIds:
        type: array
        items:
          type: string
    
  EeSurveyAggregate:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - properties:
          eventId:
            type: string
          organizerId:
            type: string
          isDirty:
            type: boolean
          lastTalliedWhen:
            type: integer
          aggregates:
            type: object
            additionalProperties:
              $ref: '#/definitions/EeAggregate'
  
  EePagedSurvey:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EeDSPagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeSurvey'
          
  EePagedSurveyAggregate:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EeDSPagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeSurveyAggregate'
  
  EeSurveyResponseInput:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/EeSurveyResponseItemInput'
  
  EeSurveyResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/EeSurveyResponseItem'
      attendees:
        type: array
        items:
          $ref: '#/definitions/EeEventAttendee'
  
  EePagedSurveyResponse:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EeDSPagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeSurveyResponseItem'
          
  EeSurveyResponseItemInput:
    type: object
    properties:
      statusId:
        type: string
      orderItemId:
        type: string
      answers:
        type: object
        additionalProperties:
          $ref: '#/definitions/EeQuestionAnswer'
  
  EeSurveyResponseItem:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EeSurveyResponseItemInput'
      - properties:
          eventId:
            type: string
          organizerId:
            type: string
          surveyId:
            type: string
          itemType:
            type: string
          itemId:
            type: string
          claimCode:
            type: string
  
  EeQuestionAnswer:
    type: object
    properties:
      text:
        type: string
      selection:
        type: array
        items:
          type: string
  EeMessageInput:
    type: object
    required:
      - subject
      - body
    properties:
      subject:
        type: string
      body:
        type: string
      sendAt:
        type: integer
        minimum: 0
      sendEmailNow:
        type: boolean
      emailAllAttendees:
        type: boolean
        
  EeMessage:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EeMessageInput'
      - properties:
          eventId:
            type: string
          eventName:
            type: string
          organizerId:
            type: string
          organizerName:
            type: string
          emailSentAt: 
            type: integer
            minimum: 0
          attendees:
            type: array
            items:
              $ref: '#/definitions/EeMessageAttendee'
          taskName:
            type: string
          isScheduled:
            type: boolean
          
  EeMessageAttendee:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      email:
        type: string
  EePagedMessage:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EeDSPagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EeMessage'
          
  EePACEProviderUpdate:
    type: object
    properties:
      providerName:
        type: string
      providerId:
        type: string
      startDate:
        type: integer
      endDate:
        type: integer
  
  EePACEProvider:
    type: object
    allOf:
      - $ref: '#/definitions/EeBaseId'
      - $ref: '#/definitions/EePACEProviderUpdate'
  
  EePagedPACEProvider:
    type: object
    properties:
      pageData:
        $ref: '#/definitions/EeDSPagination'
      items:
        type: array
        items:
          $ref: '#/definitions/EePACEProvider'